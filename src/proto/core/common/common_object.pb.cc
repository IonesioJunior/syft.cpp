// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/core/common/common_object.proto

#include "proto/core/common/common_object.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto;
namespace syft {
namespace core {
namespace common {
class CommonObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommonObject> _instance;
} _CommonObject_default_instance_;
class ObjectWithIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectWithID> _instance;
} _ObjectWithID_default_instance_;
class UIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UID> _instance;
} _UID_default_instance_;
}  // namespace common
}  // namespace core
}  // namespace syft
static void InitDefaultsscc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::core::common::_CommonObject_default_instance_;
    new (ptr) ::syft::core::common::CommonObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,}};

static void InitDefaultsscc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::core::common::_ObjectWithID_default_instance_;
    new (ptr) ::syft::core::common::ObjectWithID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,}};

static void InitDefaultsscc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::core::common::_UID_default_instance_;
    new (ptr) ::syft::core::common::UID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::CommonObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::CommonObject, uid_object_),
  PROTOBUF_FIELD_OFFSET(::syft::core::common::CommonObject, object_with_id_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::ObjectWithID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::ObjectWithID, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::UID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::core::common::UID, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syft::core::common::CommonObject)},
  { 7, -1, sizeof(::syft::core::common::ObjectWithID)},
  { 13, -1, sizeof(::syft::core::common::UID)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::core::common::_CommonObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::core::common::_ObjectWithID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::core::common::_UID_default_instance_),
};

const char descriptor_table_protodef_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%proto/core/common/common_object.proto\022"
  "\020syft.core.common\"x\n\014CommonObject\022)\n\nuid"
  "_object\030\001 \001(\0132\025.syft.core.common.UID\022=\n\025"
  "object_with_id_object\030\002 \001(\0132\036.syft.core."
  "common.ObjectWithID\"1\n\014ObjectWithID\022!\n\002i"
  "d\030\001 \001(\0132\025.syft.core.common.UID\"\024\n\003UID\022\r\n"
  "\005value\030\001 \001(\014b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_sccs[3] = {
  &scc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
  &scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
  &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto = {
  false, false, descriptor_table_protodef_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto, "proto/core/common/common_object.proto", 260,
  &descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_once, descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_sccs, descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto::offsets,
  file_level_metadata_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto, 3, file_level_enum_descriptors_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto, file_level_service_descriptors_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto)), true);
namespace syft {
namespace core {
namespace common {

// ===================================================================

class CommonObject::_Internal {
 public:
  static const ::syft::core::common::UID& uid_object(const CommonObject* msg);
  static const ::syft::core::common::ObjectWithID& object_with_id_object(const CommonObject* msg);
};

const ::syft::core::common::UID&
CommonObject::_Internal::uid_object(const CommonObject* msg) {
  return *msg->uid_object_;
}
const ::syft::core::common::ObjectWithID&
CommonObject::_Internal::object_with_id_object(const CommonObject* msg) {
  return *msg->object_with_id_object_;
}
CommonObject::CommonObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.core.common.CommonObject)
}
CommonObject::CommonObject(const CommonObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uid_object()) {
    uid_object_ = new ::syft::core::common::UID(*from.uid_object_);
  } else {
    uid_object_ = nullptr;
  }
  if (from._internal_has_object_with_id_object()) {
    object_with_id_object_ = new ::syft::core::common::ObjectWithID(*from.object_with_id_object_);
  } else {
    object_with_id_object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.core.common.CommonObject)
}

void CommonObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  ::memset(&uid_object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_with_id_object_) -
      reinterpret_cast<char*>(&uid_object_)) + sizeof(object_with_id_object_));
}

CommonObject::~CommonObject() {
  // @@protoc_insertion_point(destructor:syft.core.common.CommonObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommonObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete uid_object_;
  if (this != internal_default_instance()) delete object_with_id_object_;
}

void CommonObject::ArenaDtor(void* object) {
  CommonObject* _this = reinterpret_cast< CommonObject* >(object);
  (void)_this;
}
void CommonObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommonObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommonObject& CommonObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommonObject_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  return *internal_default_instance();
}


void CommonObject::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.core.common.CommonObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && uid_object_ != nullptr) {
    delete uid_object_;
  }
  uid_object_ = nullptr;
  if (GetArena() == nullptr && object_with_id_object_ != nullptr) {
    delete object_with_id_object_;
  }
  object_with_id_object_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID uid_object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uid_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.common.ObjectWithID object_with_id_object = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_with_id_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommonObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.core.common.CommonObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID uid_object = 1;
  if (this->has_uid_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::uid_object(this), target, stream);
  }

  // .syft.core.common.ObjectWithID object_with_id_object = 2;
  if (this->has_object_with_id_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::object_with_id_object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.core.common.CommonObject)
  return target;
}

size_t CommonObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.core.common.CommonObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID uid_object = 1;
  if (this->has_uid_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uid_object_);
  }

  // .syft.core.common.ObjectWithID object_with_id_object = 2;
  if (this->has_object_with_id_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_with_id_object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommonObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.core.common.CommonObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommonObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.core.common.CommonObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.core.common.CommonObject)
    MergeFrom(*source);
  }
}

void CommonObject::MergeFrom(const CommonObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.core.common.CommonObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid_object()) {
    _internal_mutable_uid_object()->::syft::core::common::UID::MergeFrom(from._internal_uid_object());
  }
  if (from.has_object_with_id_object()) {
    _internal_mutable_object_with_id_object()->::syft::core::common::ObjectWithID::MergeFrom(from._internal_object_with_id_object());
  }
}

void CommonObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.core.common.CommonObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonObject::CopyFrom(const CommonObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.core.common.CommonObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonObject::IsInitialized() const {
  return true;
}

void CommonObject::InternalSwap(CommonObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonObject, object_with_id_object_)
      + sizeof(CommonObject::object_with_id_object_)
      - PROTOBUF_FIELD_OFFSET(CommonObject, uid_object_)>(
          reinterpret_cast<char*>(&uid_object_),
          reinterpret_cast<char*>(&other->uid_object_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjectWithID::_Internal {
 public:
  static const ::syft::core::common::UID& id(const ObjectWithID* msg);
};

const ::syft::core::common::UID&
ObjectWithID::_Internal::id(const ObjectWithID* msg) {
  return *msg->id_;
}
ObjectWithID::ObjectWithID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.core.common.ObjectWithID)
}
ObjectWithID::ObjectWithID(const ObjectWithID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::syft::core::common::UID(*from.id_);
  } else {
    id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.core.common.ObjectWithID)
}

void ObjectWithID::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  id_ = nullptr;
}

ObjectWithID::~ObjectWithID() {
  // @@protoc_insertion_point(destructor:syft.core.common.ObjectWithID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectWithID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete id_;
}

void ObjectWithID::ArenaDtor(void* object) {
  ObjectWithID* _this = reinterpret_cast< ObjectWithID* >(object);
  (void)_this;
}
void ObjectWithID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectWithID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectWithID& ObjectWithID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectWithID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  return *internal_default_instance();
}


void ObjectWithID::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.core.common.ObjectWithID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectWithID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectWithID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.core.common.ObjectWithID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID id = 1;
  if (this->has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.core.common.ObjectWithID)
  return target;
}

size_t ObjectWithID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.core.common.ObjectWithID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectWithID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.core.common.ObjectWithID)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectWithID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectWithID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.core.common.ObjectWithID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.core.common.ObjectWithID)
    MergeFrom(*source);
  }
}

void ObjectWithID::MergeFrom(const ObjectWithID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.core.common.ObjectWithID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    _internal_mutable_id()->::syft::core::common::UID::MergeFrom(from._internal_id());
  }
}

void ObjectWithID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.core.common.ObjectWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectWithID::CopyFrom(const ObjectWithID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.core.common.ObjectWithID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectWithID::IsInitialized() const {
  return true;
}

void ObjectWithID::InternalSwap(ObjectWithID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectWithID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UID::_Internal {
 public:
};

UID::UID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.core.common.UID)
}
UID::UID(const UID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:syft.core.common.UID)
}

void UID::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UID::~UID() {
  // @@protoc_insertion_point(destructor:syft.core.common.UID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UID::ArenaDtor(void* object) {
  UID* _this = reinterpret_cast< UID* >(object);
  (void)_this;
}
void UID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UID& UID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base);
  return *internal_default_instance();
}


void UID::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.core.common.UID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.core.common.UID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.core.common.UID)
  return target;
}

size_t UID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.core.common.UID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.core.common.UID)
  GOOGLE_DCHECK_NE(&from, this);
  const UID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.core.common.UID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.core.common.UID)
    MergeFrom(*source);
  }
}

void UID::MergeFrom(const UID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.core.common.UID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void UID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.core.common.UID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UID::CopyFrom(const UID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.core.common.UID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UID::IsInitialized() const {
  return true;
}

void UID::InternalSwap(UID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UID::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace core
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syft::core::common::CommonObject* Arena::CreateMaybeMessage< ::syft::core::common::CommonObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::core::common::CommonObject >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::core::common::ObjectWithID* Arena::CreateMaybeMessage< ::syft::core::common::ObjectWithID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::core::common::ObjectWithID >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::core::common::UID* Arena::CreateMaybeMessage< ::syft::core::common::UID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::core::common::UID >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
