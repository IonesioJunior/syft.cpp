// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/core/node/common/action/run_class_method.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/core/common/common_object.pb.h"
#include "proto/core/pointer/pointer.pb.h"
#include "proto/core/io/address.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto;
namespace syft {
namespace core {
namespace node {
namespace common {
namespace action {
class RunClassMethodAction;
class RunClassMethodActionDefaultTypeInternal;
extern RunClassMethodActionDefaultTypeInternal _RunClassMethodAction_default_instance_;
class RunClassMethodAction_KwargsEntry_DoNotUse;
class RunClassMethodAction_KwargsEntry_DoNotUseDefaultTypeInternal;
extern RunClassMethodAction_KwargsEntry_DoNotUseDefaultTypeInternal _RunClassMethodAction_KwargsEntry_DoNotUse_default_instance_;
}  // namespace action
}  // namespace common
}  // namespace node
}  // namespace core
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> ::syft::core::node::common::action::RunClassMethodAction* Arena::CreateMaybeMessage<::syft::core::node::common::action::RunClassMethodAction>(Arena*);
template<> ::syft::core::node::common::action::RunClassMethodAction_KwargsEntry_DoNotUse* Arena::CreateMaybeMessage<::syft::core::node::common::action::RunClassMethodAction_KwargsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace syft {
namespace core {
namespace node {
namespace common {
namespace action {

// ===================================================================

class RunClassMethodAction_KwargsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RunClassMethodAction_KwargsEntry_DoNotUse, 
    std::string, ::syft::core::pointer::Pointer,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RunClassMethodAction_KwargsEntry_DoNotUse, 
    std::string, ::syft::core::pointer::Pointer,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  RunClassMethodAction_KwargsEntry_DoNotUse();
  explicit RunClassMethodAction_KwargsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const RunClassMethodAction_KwargsEntry_DoNotUse& other);
  static const RunClassMethodAction_KwargsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RunClassMethodAction_KwargsEntry_DoNotUse*>(&_RunClassMethodAction_KwargsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "syft.core.node.common.action.RunClassMethodAction.KwargsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto);
    return ::descriptor_table_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class RunClassMethodAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.core.node.common.action.RunClassMethodAction) */ {
 public:
  inline RunClassMethodAction() : RunClassMethodAction(nullptr) {}
  virtual ~RunClassMethodAction();

  RunClassMethodAction(const RunClassMethodAction& from);
  RunClassMethodAction(RunClassMethodAction&& from) noexcept
    : RunClassMethodAction() {
    *this = ::std::move(from);
  }

  inline RunClassMethodAction& operator=(const RunClassMethodAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunClassMethodAction& operator=(RunClassMethodAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RunClassMethodAction& default_instance();

  static inline const RunClassMethodAction* internal_default_instance() {
    return reinterpret_cast<const RunClassMethodAction*>(
               &_RunClassMethodAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RunClassMethodAction& a, RunClassMethodAction& b) {
    a.Swap(&b);
  }
  inline void Swap(RunClassMethodAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunClassMethodAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RunClassMethodAction* New() const final {
    return CreateMaybeMessage<RunClassMethodAction>(nullptr);
  }

  RunClassMethodAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RunClassMethodAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RunClassMethodAction& from);
  void MergeFrom(const RunClassMethodAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunClassMethodAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.core.node.common.action.RunClassMethodAction";
  }
  protected:
  explicit RunClassMethodAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto);
    return ::descriptor_table_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 3,
    kKwargsFieldNumber = 4,
    kPathFieldNumber = 1,
    kSelfFieldNumber = 2,
    kIdAtLocationFieldNumber = 5,
    kAddressFieldNumber = 6,
    kMsgIdFieldNumber = 7,
  };
  // repeated .syft.core.pointer.Pointer args = 3;
  int args_size() const;
  private:
  int _internal_args_size() const;
  public:
  void clear_args();
  ::syft::core::pointer::Pointer* mutable_args(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::pointer::Pointer >*
      mutable_args();
  private:
  const ::syft::core::pointer::Pointer& _internal_args(int index) const;
  ::syft::core::pointer::Pointer* _internal_add_args();
  public:
  const ::syft::core::pointer::Pointer& args(int index) const;
  ::syft::core::pointer::Pointer* add_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::pointer::Pointer >&
      args() const;

  // map<string, .syft.core.pointer.Pointer> kwargs = 4;
  int kwargs_size() const;
  private:
  int _internal_kwargs_size() const;
  public:
  void clear_kwargs();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >&
      _internal_kwargs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >*
      _internal_mutable_kwargs();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >&
      kwargs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >*
      mutable_kwargs();

  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // .syft.core.pointer.Pointer _self = 2;
  bool has__self() const;
  private:
  bool _internal_has__self() const;
  public:
  void clear__self();
  const ::syft::core::pointer::Pointer& _self() const;
  ::syft::core::pointer::Pointer* release__self();
  ::syft::core::pointer::Pointer* mutable__self();
  void set_allocated__self(::syft::core::pointer::Pointer* _self);
  private:
  const ::syft::core::pointer::Pointer& _internal__self() const;
  ::syft::core::pointer::Pointer* _internal_mutable__self();
  public:
  void unsafe_arena_set_allocated__self(
      ::syft::core::pointer::Pointer* _self);
  ::syft::core::pointer::Pointer* unsafe_arena_release__self();

  // .syft.core.common.UID id_at_location = 5;
  bool has_id_at_location() const;
  private:
  bool _internal_has_id_at_location() const;
  public:
  void clear_id_at_location();
  const ::syft::core::common::UID& id_at_location() const;
  ::syft::core::common::UID* release_id_at_location();
  ::syft::core::common::UID* mutable_id_at_location();
  void set_allocated_id_at_location(::syft::core::common::UID* id_at_location);
  private:
  const ::syft::core::common::UID& _internal_id_at_location() const;
  ::syft::core::common::UID* _internal_mutable_id_at_location();
  public:
  void unsafe_arena_set_allocated_id_at_location(
      ::syft::core::common::UID* id_at_location);
  ::syft::core::common::UID* unsafe_arena_release_id_at_location();

  // .syft.core.io.Address address = 6;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.common.UID msg_id = 7;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // @@protoc_insertion_point(class_scope:syft.core.node.common.action.RunClassMethodAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::pointer::Pointer > args_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      RunClassMethodAction_KwargsEntry_DoNotUse,
      std::string, ::syft::core::pointer::Pointer,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> kwargs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  ::syft::core::pointer::Pointer* _self_;
  ::syft::core::common::UID* id_at_location_;
  ::syft::core::io::Address* address_;
  ::syft::core::common::UID* msg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RunClassMethodAction

// string path = 1;
inline void RunClassMethodAction::clear_path() {
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& RunClassMethodAction::path() const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction.path)
  return _internal_path();
}
inline void RunClassMethodAction::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:syft.core.node.common.action.RunClassMethodAction.path)
}
inline std::string* RunClassMethodAction::mutable_path() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction.path)
  return _internal_mutable_path();
}
inline const std::string& RunClassMethodAction::_internal_path() const {
  return path_.Get();
}
inline void RunClassMethodAction::_internal_set_path(const std::string& value) {
  
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void RunClassMethodAction::set_path(std::string&& value) {
  
  path_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:syft.core.node.common.action.RunClassMethodAction.path)
}
inline void RunClassMethodAction::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:syft.core.node.common.action.RunClassMethodAction.path)
}
inline void RunClassMethodAction::set_path(const char* value,
    size_t size) {
  
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:syft.core.node.common.action.RunClassMethodAction.path)
}
inline std::string* RunClassMethodAction::_internal_mutable_path() {
  
  return path_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* RunClassMethodAction::release_path() {
  // @@protoc_insertion_point(field_release:syft.core.node.common.action.RunClassMethodAction.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RunClassMethodAction::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.common.action.RunClassMethodAction.path)
}

// .syft.core.pointer.Pointer _self = 2;
inline bool RunClassMethodAction::_internal_has__self() const {
  return this != internal_default_instance() && _self_ != nullptr;
}
inline bool RunClassMethodAction::has__self() const {
  return _internal_has__self();
}
inline const ::syft::core::pointer::Pointer& RunClassMethodAction::_internal__self() const {
  const ::syft::core::pointer::Pointer* p = _self_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::pointer::Pointer&>(
      ::syft::core::pointer::_Pointer_default_instance_);
}
inline const ::syft::core::pointer::Pointer& RunClassMethodAction::_self() const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction._self)
  return _internal__self();
}
inline void RunClassMethodAction::unsafe_arena_set_allocated__self(
    ::syft::core::pointer::Pointer* _self) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_self_);
  }
  _self_ = _self;
  if (_self) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.common.action.RunClassMethodAction._self)
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::release__self() {
  
  ::syft::core::pointer::Pointer* temp = _self_;
  _self_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::unsafe_arena_release__self() {
  // @@protoc_insertion_point(field_release:syft.core.node.common.action.RunClassMethodAction._self)
  
  ::syft::core::pointer::Pointer* temp = _self_;
  _self_ = nullptr;
  return temp;
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::_internal_mutable__self() {
  
  if (_self_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::pointer::Pointer>(GetArena());
    _self_ = p;
  }
  return _self_;
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::mutable__self() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction._self)
  return _internal_mutable__self();
}
inline void RunClassMethodAction::set_allocated__self(::syft::core::pointer::Pointer* _self) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_self_);
  }
  if (_self) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_self)->GetArena();
    if (message_arena != submessage_arena) {
      _self = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, _self, submessage_arena);
    }
    
  } else {
    
  }
  _self_ = _self;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.common.action.RunClassMethodAction._self)
}

// repeated .syft.core.pointer.Pointer args = 3;
inline int RunClassMethodAction::_internal_args_size() const {
  return args_.size();
}
inline int RunClassMethodAction::args_size() const {
  return _internal_args_size();
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction.args)
  return args_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::pointer::Pointer >*
RunClassMethodAction::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:syft.core.node.common.action.RunClassMethodAction.args)
  return &args_;
}
inline const ::syft::core::pointer::Pointer& RunClassMethodAction::_internal_args(int index) const {
  return args_.Get(index);
}
inline const ::syft::core::pointer::Pointer& RunClassMethodAction::args(int index) const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction.args)
  return _internal_args(index);
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::_internal_add_args() {
  return args_.Add();
}
inline ::syft::core::pointer::Pointer* RunClassMethodAction::add_args() {
  // @@protoc_insertion_point(field_add:syft.core.node.common.action.RunClassMethodAction.args)
  return _internal_add_args();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::pointer::Pointer >&
RunClassMethodAction::args() const {
  // @@protoc_insertion_point(field_list:syft.core.node.common.action.RunClassMethodAction.args)
  return args_;
}

// map<string, .syft.core.pointer.Pointer> kwargs = 4;
inline int RunClassMethodAction::_internal_kwargs_size() const {
  return kwargs_.size();
}
inline int RunClassMethodAction::kwargs_size() const {
  return _internal_kwargs_size();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >&
RunClassMethodAction::_internal_kwargs() const {
  return kwargs_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >&
RunClassMethodAction::kwargs() const {
  // @@protoc_insertion_point(field_map:syft.core.node.common.action.RunClassMethodAction.kwargs)
  return _internal_kwargs();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >*
RunClassMethodAction::_internal_mutable_kwargs() {
  return kwargs_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::syft::core::pointer::Pointer >*
RunClassMethodAction::mutable_kwargs() {
  // @@protoc_insertion_point(field_mutable_map:syft.core.node.common.action.RunClassMethodAction.kwargs)
  return _internal_mutable_kwargs();
}

// .syft.core.common.UID id_at_location = 5;
inline bool RunClassMethodAction::_internal_has_id_at_location() const {
  return this != internal_default_instance() && id_at_location_ != nullptr;
}
inline bool RunClassMethodAction::has_id_at_location() const {
  return _internal_has_id_at_location();
}
inline const ::syft::core::common::UID& RunClassMethodAction::_internal_id_at_location() const {
  const ::syft::core::common::UID* p = id_at_location_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& RunClassMethodAction::id_at_location() const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction.id_at_location)
  return _internal_id_at_location();
}
inline void RunClassMethodAction::unsafe_arena_set_allocated_id_at_location(
    ::syft::core::common::UID* id_at_location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_at_location_);
  }
  id_at_location_ = id_at_location;
  if (id_at_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.common.action.RunClassMethodAction.id_at_location)
}
inline ::syft::core::common::UID* RunClassMethodAction::release_id_at_location() {
  
  ::syft::core::common::UID* temp = id_at_location_;
  id_at_location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* RunClassMethodAction::unsafe_arena_release_id_at_location() {
  // @@protoc_insertion_point(field_release:syft.core.node.common.action.RunClassMethodAction.id_at_location)
  
  ::syft::core::common::UID* temp = id_at_location_;
  id_at_location_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* RunClassMethodAction::_internal_mutable_id_at_location() {
  
  if (id_at_location_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    id_at_location_ = p;
  }
  return id_at_location_;
}
inline ::syft::core::common::UID* RunClassMethodAction::mutable_id_at_location() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction.id_at_location)
  return _internal_mutable_id_at_location();
}
inline void RunClassMethodAction::set_allocated_id_at_location(::syft::core::common::UID* id_at_location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_at_location_);
  }
  if (id_at_location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_at_location)->GetArena();
    if (message_arena != submessage_arena) {
      id_at_location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, id_at_location, submessage_arena);
    }
    
  } else {
    
  }
  id_at_location_ = id_at_location;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.common.action.RunClassMethodAction.id_at_location)
}

// .syft.core.io.Address address = 6;
inline bool RunClassMethodAction::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool RunClassMethodAction::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& RunClassMethodAction::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& RunClassMethodAction::address() const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction.address)
  return _internal_address();
}
inline void RunClassMethodAction::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.common.action.RunClassMethodAction.address)
}
inline ::syft::core::io::Address* RunClassMethodAction::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* RunClassMethodAction::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.core.node.common.action.RunClassMethodAction.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* RunClassMethodAction::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* RunClassMethodAction::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction.address)
  return _internal_mutable_address();
}
inline void RunClassMethodAction::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.common.action.RunClassMethodAction.address)
}

// .syft.core.common.UID msg_id = 7;
inline bool RunClassMethodAction::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool RunClassMethodAction::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& RunClassMethodAction::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& RunClassMethodAction::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.core.node.common.action.RunClassMethodAction.msg_id)
  return _internal_msg_id();
}
inline void RunClassMethodAction::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.common.action.RunClassMethodAction.msg_id)
}
inline ::syft::core::common::UID* RunClassMethodAction::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* RunClassMethodAction::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.core.node.common.action.RunClassMethodAction.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* RunClassMethodAction::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* RunClassMethodAction::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.common.action.RunClassMethodAction.msg_id)
  return _internal_mutable_msg_id();
}
inline void RunClassMethodAction::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.common.action.RunClassMethodAction.msg_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace action
}  // namespace common
}  // namespace node
}  // namespace core
}  // namespace syft

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fcommon_2faction_2frun_5fclass_5fmethod_2eproto
