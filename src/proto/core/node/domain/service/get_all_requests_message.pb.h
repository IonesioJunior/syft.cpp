// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/core/node/domain/service/get_all_requests_message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/core/node/domain/service/request_message.pb.h"
#include "proto/core/common/common_object.pb.h"
#include "proto/core/io/address.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto;
namespace syft {
namespace core {
namespace node {
namespace domain {
namespace service {
class GetAllRequestsMessage;
class GetAllRequestsMessageDefaultTypeInternal;
extern GetAllRequestsMessageDefaultTypeInternal _GetAllRequestsMessage_default_instance_;
class GetAllRequestsResponseMessage;
class GetAllRequestsResponseMessageDefaultTypeInternal;
extern GetAllRequestsResponseMessageDefaultTypeInternal _GetAllRequestsResponseMessage_default_instance_;
}  // namespace service
}  // namespace domain
}  // namespace node
}  // namespace core
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> ::syft::core::node::domain::service::GetAllRequestsMessage* Arena::CreateMaybeMessage<::syft::core::node::domain::service::GetAllRequestsMessage>(Arena*);
template<> ::syft::core::node::domain::service::GetAllRequestsResponseMessage* Arena::CreateMaybeMessage<::syft::core::node::domain::service::GetAllRequestsResponseMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace syft {
namespace core {
namespace node {
namespace domain {
namespace service {

// ===================================================================

class GetAllRequestsMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.core.node.domain.service.GetAllRequestsMessage) */ {
 public:
  inline GetAllRequestsMessage() : GetAllRequestsMessage(nullptr) {}
  virtual ~GetAllRequestsMessage();

  GetAllRequestsMessage(const GetAllRequestsMessage& from);
  GetAllRequestsMessage(GetAllRequestsMessage&& from) noexcept
    : GetAllRequestsMessage() {
    *this = ::std::move(from);
  }

  inline GetAllRequestsMessage& operator=(const GetAllRequestsMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllRequestsMessage& operator=(GetAllRequestsMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAllRequestsMessage& default_instance();

  static inline const GetAllRequestsMessage* internal_default_instance() {
    return reinterpret_cast<const GetAllRequestsMessage*>(
               &_GetAllRequestsMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetAllRequestsMessage& a, GetAllRequestsMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllRequestsMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllRequestsMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAllRequestsMessage* New() const final {
    return CreateMaybeMessage<GetAllRequestsMessage>(nullptr);
  }

  GetAllRequestsMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAllRequestsMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAllRequestsMessage& from);
  void MergeFrom(const GetAllRequestsMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAllRequestsMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.core.node.domain.service.GetAllRequestsMessage";
  }
  protected:
  explicit GetAllRequestsMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto);
    return ::descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
    kReplyToFieldNumber = 3,
  };
  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.io.Address reply_to = 3;
  bool has_reply_to() const;
  private:
  bool _internal_has_reply_to() const;
  public:
  void clear_reply_to();
  const ::syft::core::io::Address& reply_to() const;
  ::syft::core::io::Address* release_reply_to();
  ::syft::core::io::Address* mutable_reply_to();
  void set_allocated_reply_to(::syft::core::io::Address* reply_to);
  private:
  const ::syft::core::io::Address& _internal_reply_to() const;
  ::syft::core::io::Address* _internal_mutable_reply_to();
  public:
  void unsafe_arena_set_allocated_reply_to(
      ::syft::core::io::Address* reply_to);
  ::syft::core::io::Address* unsafe_arena_release_reply_to();

  // @@protoc_insertion_point(class_scope:syft.core.node.domain.service.GetAllRequestsMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  ::syft::core::io::Address* reply_to_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class GetAllRequestsResponseMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.core.node.domain.service.GetAllRequestsResponseMessage) */ {
 public:
  inline GetAllRequestsResponseMessage() : GetAllRequestsResponseMessage(nullptr) {}
  virtual ~GetAllRequestsResponseMessage();

  GetAllRequestsResponseMessage(const GetAllRequestsResponseMessage& from);
  GetAllRequestsResponseMessage(GetAllRequestsResponseMessage&& from) noexcept
    : GetAllRequestsResponseMessage() {
    *this = ::std::move(from);
  }

  inline GetAllRequestsResponseMessage& operator=(const GetAllRequestsResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllRequestsResponseMessage& operator=(GetAllRequestsResponseMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetAllRequestsResponseMessage& default_instance();

  static inline const GetAllRequestsResponseMessage* internal_default_instance() {
    return reinterpret_cast<const GetAllRequestsResponseMessage*>(
               &_GetAllRequestsResponseMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetAllRequestsResponseMessage& a, GetAllRequestsResponseMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllRequestsResponseMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllRequestsResponseMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetAllRequestsResponseMessage* New() const final {
    return CreateMaybeMessage<GetAllRequestsResponseMessage>(nullptr);
  }

  GetAllRequestsResponseMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetAllRequestsResponseMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetAllRequestsResponseMessage& from);
  void MergeFrom(const GetAllRequestsResponseMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAllRequestsResponseMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.core.node.domain.service.GetAllRequestsResponseMessage";
  }
  protected:
  explicit GetAllRequestsResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto);
    return ::descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestsFieldNumber = 3,
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
  };
  // repeated .syft.core.node.domain.service.RequestMessage requests = 3;
  int requests_size() const;
  private:
  int _internal_requests_size() const;
  public:
  void clear_requests();
  ::syft::core::node::domain::service::RequestMessage* mutable_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::node::domain::service::RequestMessage >*
      mutable_requests();
  private:
  const ::syft::core::node::domain::service::RequestMessage& _internal_requests(int index) const;
  ::syft::core::node::domain::service::RequestMessage* _internal_add_requests();
  public:
  const ::syft::core::node::domain::service::RequestMessage& requests(int index) const;
  ::syft::core::node::domain::service::RequestMessage* add_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::node::domain::service::RequestMessage >&
      requests() const;

  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // @@protoc_insertion_point(class_scope:syft.core.node.domain.service.GetAllRequestsResponseMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::node::domain::service::RequestMessage > requests_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetAllRequestsMessage

// .syft.core.common.UID msg_id = 1;
inline bool GetAllRequestsMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool GetAllRequestsMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& GetAllRequestsMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& GetAllRequestsMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsMessage.msg_id)
  return _internal_msg_id();
}
inline void GetAllRequestsMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.msg_id)
}
inline ::syft::core::common::UID* GetAllRequestsMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* GetAllRequestsMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.core.node.domain.service.GetAllRequestsMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* GetAllRequestsMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* GetAllRequestsMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void GetAllRequestsMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool GetAllRequestsMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool GetAllRequestsMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& GetAllRequestsMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& GetAllRequestsMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsMessage.address)
  return _internal_address();
}
inline void GetAllRequestsMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.address)
}
inline ::syft::core::io::Address* GetAllRequestsMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.core.node.domain.service.GetAllRequestsMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsMessage.address)
  return _internal_mutable_address();
}
inline void GetAllRequestsMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.address)
}

// .syft.core.io.Address reply_to = 3;
inline bool GetAllRequestsMessage::_internal_has_reply_to() const {
  return this != internal_default_instance() && reply_to_ != nullptr;
}
inline bool GetAllRequestsMessage::has_reply_to() const {
  return _internal_has_reply_to();
}
inline const ::syft::core::io::Address& GetAllRequestsMessage::_internal_reply_to() const {
  const ::syft::core::io::Address* p = reply_to_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& GetAllRequestsMessage::reply_to() const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsMessage.reply_to)
  return _internal_reply_to();
}
inline void GetAllRequestsMessage::unsafe_arena_set_allocated_reply_to(
    ::syft::core::io::Address* reply_to) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  reply_to_ = reply_to;
  if (reply_to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.reply_to)
}
inline ::syft::core::io::Address* GetAllRequestsMessage::release_reply_to() {
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::unsafe_arena_release_reply_to() {
  // @@protoc_insertion_point(field_release:syft.core.node.domain.service.GetAllRequestsMessage.reply_to)
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::_internal_mutable_reply_to() {
  
  if (reply_to_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    reply_to_ = p;
  }
  return reply_to_;
}
inline ::syft::core::io::Address* GetAllRequestsMessage::mutable_reply_to() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsMessage.reply_to)
  return _internal_mutable_reply_to();
}
inline void GetAllRequestsMessage::set_allocated_reply_to(::syft::core::io::Address* reply_to) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  if (reply_to) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to)->GetArena();
    if (message_arena != submessage_arena) {
      reply_to = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_to, submessage_arena);
    }
    
  } else {
    
  }
  reply_to_ = reply_to;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.domain.service.GetAllRequestsMessage.reply_to)
}

// -------------------------------------------------------------------

// GetAllRequestsResponseMessage

// .syft.core.common.UID msg_id = 1;
inline bool GetAllRequestsResponseMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool GetAllRequestsResponseMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& GetAllRequestsResponseMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& GetAllRequestsResponseMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsResponseMessage.msg_id)
  return _internal_msg_id();
}
inline void GetAllRequestsResponseMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.domain.service.GetAllRequestsResponseMessage.msg_id)
}
inline ::syft::core::common::UID* GetAllRequestsResponseMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* GetAllRequestsResponseMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.core.node.domain.service.GetAllRequestsResponseMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* GetAllRequestsResponseMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* GetAllRequestsResponseMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsResponseMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void GetAllRequestsResponseMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.domain.service.GetAllRequestsResponseMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool GetAllRequestsResponseMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool GetAllRequestsResponseMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& GetAllRequestsResponseMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& GetAllRequestsResponseMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsResponseMessage.address)
  return _internal_address();
}
inline void GetAllRequestsResponseMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.core.node.domain.service.GetAllRequestsResponseMessage.address)
}
inline ::syft::core::io::Address* GetAllRequestsResponseMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsResponseMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.core.node.domain.service.GetAllRequestsResponseMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* GetAllRequestsResponseMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* GetAllRequestsResponseMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsResponseMessage.address)
  return _internal_mutable_address();
}
inline void GetAllRequestsResponseMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.core.node.domain.service.GetAllRequestsResponseMessage.address)
}

// repeated .syft.core.node.domain.service.RequestMessage requests = 3;
inline int GetAllRequestsResponseMessage::_internal_requests_size() const {
  return requests_.size();
}
inline int GetAllRequestsResponseMessage::requests_size() const {
  return _internal_requests_size();
}
inline ::syft::core::node::domain::service::RequestMessage* GetAllRequestsResponseMessage::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:syft.core.node.domain.service.GetAllRequestsResponseMessage.requests)
  return requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::node::domain::service::RequestMessage >*
GetAllRequestsResponseMessage::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:syft.core.node.domain.service.GetAllRequestsResponseMessage.requests)
  return &requests_;
}
inline const ::syft::core::node::domain::service::RequestMessage& GetAllRequestsResponseMessage::_internal_requests(int index) const {
  return requests_.Get(index);
}
inline const ::syft::core::node::domain::service::RequestMessage& GetAllRequestsResponseMessage::requests(int index) const {
  // @@protoc_insertion_point(field_get:syft.core.node.domain.service.GetAllRequestsResponseMessage.requests)
  return _internal_requests(index);
}
inline ::syft::core::node::domain::service::RequestMessage* GetAllRequestsResponseMessage::_internal_add_requests() {
  return requests_.Add();
}
inline ::syft::core::node::domain::service::RequestMessage* GetAllRequestsResponseMessage::add_requests() {
  // @@protoc_insertion_point(field_add:syft.core.node.domain.service.GetAllRequestsResponseMessage.requests)
  return _internal_add_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::syft::core::node::domain::service::RequestMessage >&
GetAllRequestsResponseMessage::requests() const {
  // @@protoc_insertion_point(field_list:syft.core.node.domain.service.GetAllRequestsResponseMessage.requests)
  return requests_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace domain
}  // namespace node
}  // namespace core
}  // namespace syft

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fcore_2fnode_2fdomain_2fservice_2fget_5fall_5frequests_5fmessage_2eproto
