// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/core/node/domain/service/request_answer_message.proto

#include "proto/core/node/domain/service/request_answer_message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fio_2faddress_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Address_proto_2fcore_2fio_2faddress_2eproto;
namespace syft {
namespace core {
namespace node {
namespace domain {
namespace service {
class RequestAnswerMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestAnswerMessage> _instance;
} _RequestAnswerMessage_default_instance_;
}  // namespace service
}  // namespace domain
}  // namespace node
}  // namespace core
}  // namespace syft
static void InitDefaultsscc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::core::node::domain::service::_RequestAnswerMessage_default_instance_;
    new (ptr) ::syft::core::node::domain::service::RequestAnswerMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::core::node::domain::service::RequestAnswerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::core::node::domain::service::RequestAnswerMessage, request_id_),
  PROTOBUF_FIELD_OFFSET(::syft::core::node::domain::service::RequestAnswerMessage, address_),
  PROTOBUF_FIELD_OFFSET(::syft::core::node::domain::service::RequestAnswerMessage, reply_to_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syft::core::node::domain::service::RequestAnswerMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::core::node::domain::service::_RequestAnswerMessage_default_instance_),
};

const char descriptor_table_protodef_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;proto/core/node/domain/service/request"
  "_answer_message.proto\022\035syft.core.node.do"
  "main.service\032%proto/core/common/common_o"
  "bject.proto\032\033proto/core/io/address.proto"
  "\"\222\001\n\024RequestAnswerMessage\022)\n\nrequest_id\030"
  "\001 \001(\0132\025.syft.core.common.UID\022&\n\007address\030"
  "\002 \001(\0132\025.syft.core.io.Address\022\'\n\010reply_to"
  "\030\003 \001(\0132\025.syft.core.io.Addressb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_deps[2] = {
  &::descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto,
  &::descriptor_table_proto_2fcore_2fio_2faddress_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_sccs[1] = {
  &scc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto = {
  false, false, descriptor_table_protodef_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto, "proto/core/node/domain/service/request_answer_message.proto", 317,
  &descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_once, descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_sccs, descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto::offsets,
  file_level_metadata_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto, 1, file_level_enum_descriptors_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto, file_level_service_descriptors_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto)), true);
namespace syft {
namespace core {
namespace node {
namespace domain {
namespace service {

// ===================================================================

class RequestAnswerMessage::_Internal {
 public:
  static const ::syft::core::common::UID& request_id(const RequestAnswerMessage* msg);
  static const ::syft::core::io::Address& address(const RequestAnswerMessage* msg);
  static const ::syft::core::io::Address& reply_to(const RequestAnswerMessage* msg);
};

const ::syft::core::common::UID&
RequestAnswerMessage::_Internal::request_id(const RequestAnswerMessage* msg) {
  return *msg->request_id_;
}
const ::syft::core::io::Address&
RequestAnswerMessage::_Internal::address(const RequestAnswerMessage* msg) {
  return *msg->address_;
}
const ::syft::core::io::Address&
RequestAnswerMessage::_Internal::reply_to(const RequestAnswerMessage* msg) {
  return *msg->reply_to_;
}
void RequestAnswerMessage::clear_request_id() {
  if (GetArena() == nullptr && request_id_ != nullptr) {
    delete request_id_;
  }
  request_id_ = nullptr;
}
void RequestAnswerMessage::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
void RequestAnswerMessage::clear_reply_to() {
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
}
RequestAnswerMessage::RequestAnswerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.core.node.domain.service.RequestAnswerMessage)
}
RequestAnswerMessage::RequestAnswerMessage(const RequestAnswerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_request_id()) {
    request_id_ = new ::syft::core::common::UID(*from.request_id_);
  } else {
    request_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_reply_to()) {
    reply_to_ = new ::syft::core::io::Address(*from.reply_to_);
  } else {
    reply_to_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.core.node.domain.service.RequestAnswerMessage)
}

void RequestAnswerMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto.base);
  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_to_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(reply_to_));
}

RequestAnswerMessage::~RequestAnswerMessage() {
  // @@protoc_insertion_point(destructor:syft.core.node.domain.service.RequestAnswerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RequestAnswerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete request_id_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete reply_to_;
}

void RequestAnswerMessage::ArenaDtor(void* object) {
  RequestAnswerMessage* _this = reinterpret_cast< RequestAnswerMessage* >(object);
  (void)_this;
}
void RequestAnswerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestAnswerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestAnswerMessage& RequestAnswerMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestAnswerMessage_proto_2fcore_2fnode_2fdomain_2fservice_2frequest_5fanswer_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void RequestAnswerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.core.node.domain.service.RequestAnswerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && request_id_ != nullptr) {
    delete request_id_;
  }
  request_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestAnswerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address reply_to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_to(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestAnswerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.core.node.domain.service.RequestAnswerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID request_id = 1;
  if (this->has_request_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::request_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reply_to(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.core.node.domain.service.RequestAnswerMessage)
  return target;
}

size_t RequestAnswerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.core.node.domain.service.RequestAnswerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID request_id = 1;
  if (this->has_request_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_to_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestAnswerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.core.node.domain.service.RequestAnswerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestAnswerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestAnswerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.core.node.domain.service.RequestAnswerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.core.node.domain.service.RequestAnswerMessage)
    MergeFrom(*source);
  }
}

void RequestAnswerMessage::MergeFrom(const RequestAnswerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.core.node.domain.service.RequestAnswerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_request_id()) {
    _internal_mutable_request_id()->::syft::core::common::UID::MergeFrom(from._internal_request_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
  if (from.has_reply_to()) {
    _internal_mutable_reply_to()->::syft::core::io::Address::MergeFrom(from._internal_reply_to());
  }
}

void RequestAnswerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.core.node.domain.service.RequestAnswerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAnswerMessage::CopyFrom(const RequestAnswerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.core.node.domain.service.RequestAnswerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAnswerMessage::IsInitialized() const {
  return true;
}

void RequestAnswerMessage::InternalSwap(RequestAnswerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestAnswerMessage, reply_to_)
      + sizeof(RequestAnswerMessage::reply_to_)
      - PROTOBUF_FIELD_OFFSET(RequestAnswerMessage, request_id_)>(
          reinterpret_cast<char*>(&request_id_),
          reinterpret_cast<char*>(&other->request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestAnswerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace domain
}  // namespace node
}  // namespace core
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syft::core::node::domain::service::RequestAnswerMessage* Arena::CreateMaybeMessage< ::syft::core::node::domain::service::RequestAnswerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::core::node::domain::service::RequestAnswerMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
