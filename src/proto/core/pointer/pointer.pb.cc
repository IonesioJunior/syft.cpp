// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/core/pointer/pointer.proto

#include "proto/core/pointer/pointer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fio_2faddress_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Address_proto_2fcore_2fio_2faddress_2eproto;
namespace syft {
namespace core {
namespace pointer {
class PointerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pointer> _instance;
} _Pointer_default_instance_;
}  // namespace pointer
}  // namespace core
}  // namespace syft
static void InitDefaultsscc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::core::pointer::_Pointer_default_instance_;
    new (ptr) ::syft::core::pointer::Pointer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fcore_2fpointer_2fpointer_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fcore_2fpointer_2fpointer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fcore_2fpointer_2fpointer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fcore_2fpointer_2fpointer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, points_to_object_with_path_),
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, pointer_name_),
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, id_at_location_),
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, location_),
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, tags_),
  PROTOBUF_FIELD_OFFSET(::syft::core::pointer::Pointer, description_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syft::core::pointer::Pointer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::core::pointer::_Pointer_default_instance_),
};

const char descriptor_table_protodef_proto_2fcore_2fpointer_2fpointer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n proto/core/pointer/pointer.proto\022\021syft"
  ".core.pointer\032%proto/core/common/common_"
  "object.proto\032\033proto/core/io/address.prot"
  "o\"\276\001\n\007Pointer\022\"\n\032points_to_object_with_p"
  "ath\030\001 \001(\t\022\024\n\014pointer_name\030\002 \001(\t\022-\n\016id_at"
  "_location\030\003 \001(\0132\025.syft.core.common.UID\022\'"
  "\n\010location\030\004 \001(\0132\025.syft.core.io.Address\022"
  "\014\n\004tags\030\005 \003(\t\022\023\n\013description\030\006 \001(\tb\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_deps[2] = {
  &::descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto,
  &::descriptor_table_proto_2fcore_2fio_2faddress_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_sccs[1] = {
  &scc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto = {
  false, false, descriptor_table_protodef_proto_2fcore_2fpointer_2fpointer_2eproto, "proto/core/pointer/pointer.proto", 322,
  &descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_once, descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_sccs, descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_proto_2fcore_2fpointer_2fpointer_2eproto::offsets,
  file_level_metadata_proto_2fcore_2fpointer_2fpointer_2eproto, 1, file_level_enum_descriptors_proto_2fcore_2fpointer_2fpointer_2eproto, file_level_service_descriptors_proto_2fcore_2fpointer_2fpointer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fcore_2fpointer_2fpointer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fcore_2fpointer_2fpointer_2eproto)), true);
namespace syft {
namespace core {
namespace pointer {

// ===================================================================

class Pointer::_Internal {
 public:
  static const ::syft::core::common::UID& id_at_location(const Pointer* msg);
  static const ::syft::core::io::Address& location(const Pointer* msg);
};

const ::syft::core::common::UID&
Pointer::_Internal::id_at_location(const Pointer* msg) {
  return *msg->id_at_location_;
}
const ::syft::core::io::Address&
Pointer::_Internal::location(const Pointer* msg) {
  return *msg->location_;
}
void Pointer::clear_id_at_location() {
  if (GetArena() == nullptr && id_at_location_ != nullptr) {
    delete id_at_location_;
  }
  id_at_location_ = nullptr;
}
void Pointer::clear_location() {
  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
}
Pointer::Pointer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.core.pointer.Pointer)
}
Pointer::Pointer(const Pointer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  points_to_object_with_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points_to_object_with_path().empty()) {
    points_to_object_with_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_points_to_object_with_path(),
      GetArena());
  }
  pointer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pointer_name().empty()) {
    pointer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pointer_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_id_at_location()) {
    id_at_location_ = new ::syft::core::common::UID(*from.id_at_location_);
  } else {
    id_at_location_ = nullptr;
  }
  if (from._internal_has_location()) {
    location_ = new ::syft::core::io::Address(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.core.pointer.Pointer)
}

void Pointer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto.base);
  points_to_object_with_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pointer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_at_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_) -
      reinterpret_cast<char*>(&id_at_location_)) + sizeof(location_));
}

Pointer::~Pointer() {
  // @@protoc_insertion_point(destructor:syft.core.pointer.Pointer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pointer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  points_to_object_with_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pointer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_at_location_;
  if (this != internal_default_instance()) delete location_;
}

void Pointer::ArenaDtor(void* object) {
  Pointer* _this = reinterpret_cast< Pointer* >(object);
  (void)_this;
}
void Pointer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pointer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pointer& Pointer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pointer_proto_2fcore_2fpointer_2fpointer_2eproto.base);
  return *internal_default_instance();
}


void Pointer::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.core.pointer.Pointer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  points_to_object_with_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pointer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && id_at_location_ != nullptr) {
    delete id_at_location_;
  }
  id_at_location_ = nullptr;
  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pointer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string points_to_object_with_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_points_to_object_with_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.core.pointer.Pointer.points_to_object_with_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pointer_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pointer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.core.pointer.Pointer.pointer_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.common.UID id_at_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_id_at_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address location = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string tags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.core.pointer.Pointer.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.core.pointer.Pointer.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pointer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.core.pointer.Pointer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string points_to_object_with_path = 1;
  if (this->points_to_object_with_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_points_to_object_with_path().data(), static_cast<int>(this->_internal_points_to_object_with_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.core.pointer.Pointer.points_to_object_with_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_points_to_object_with_path(), target);
  }

  // string pointer_name = 2;
  if (this->pointer_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pointer_name().data(), static_cast<int>(this->_internal_pointer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.core.pointer.Pointer.pointer_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pointer_name(), target);
  }

  // .syft.core.common.UID id_at_location = 3;
  if (this->has_id_at_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::id_at_location(this), target, stream);
  }

  // .syft.core.io.Address location = 4;
  if (this->has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::location(this), target, stream);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.core.pointer.Pointer.tags");
    target = stream->WriteString(5, s, target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.core.pointer.Pointer.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.core.pointer.Pointer)
  return target;
}

size_t Pointer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.core.pointer.Pointer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // string points_to_object_with_path = 1;
  if (this->points_to_object_with_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_points_to_object_with_path());
  }

  // string pointer_name = 2;
  if (this->pointer_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pointer_name());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .syft.core.common.UID id_at_location = 3;
  if (this->has_id_at_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_at_location_);
  }

  // .syft.core.io.Address location = 4;
  if (this->has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pointer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.core.pointer.Pointer)
  GOOGLE_DCHECK_NE(&from, this);
  const Pointer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pointer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.core.pointer.Pointer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.core.pointer.Pointer)
    MergeFrom(*source);
  }
}

void Pointer::MergeFrom(const Pointer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.core.pointer.Pointer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.points_to_object_with_path().size() > 0) {
    _internal_set_points_to_object_with_path(from._internal_points_to_object_with_path());
  }
  if (from.pointer_name().size() > 0) {
    _internal_set_pointer_name(from._internal_pointer_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_id_at_location()) {
    _internal_mutable_id_at_location()->::syft::core::common::UID::MergeFrom(from._internal_id_at_location());
  }
  if (from.has_location()) {
    _internal_mutable_location()->::syft::core::io::Address::MergeFrom(from._internal_location());
  }
}

void Pointer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.core.pointer.Pointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pointer::CopyFrom(const Pointer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.core.pointer.Pointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pointer::IsInitialized() const {
  return true;
}

void Pointer::InternalSwap(Pointer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  points_to_object_with_path_.Swap(&other->points_to_object_with_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pointer_name_.Swap(&other->pointer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pointer, location_)
      + sizeof(Pointer::location_)
      - PROTOBUF_FIELD_OFFSET(Pointer, id_at_location_)>(
          reinterpret_cast<char*>(&id_at_location_),
          reinterpret_cast<char*>(&other->id_at_location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pointer::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pointer
}  // namespace core
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syft::core::pointer::Pointer* Arena::CreateMaybeMessage< ::syft::core::pointer::Pointer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::core::pointer::Pointer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
