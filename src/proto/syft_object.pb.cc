// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/syft_object.proto

#include "proto/syft_object.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fast_2fast_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AstObject_proto_2fast_2fast_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcore_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CoreObject_proto_2fcore_2fcore_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2flib_2flib_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LibObject_proto_2flib_2flib_5fobject_2eproto;
namespace syft {
class SyftObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyftObject> _instance;
} _SyftObject_default_instance_;
}  // namespace syft
static void InitDefaultsscc_info_SyftObject_proto_2fsyft_5fobject_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::_SyftObject_default_instance_;
    new (ptr) ::syft::SyftObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SyftObject_proto_2fsyft_5fobject_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_SyftObject_proto_2fsyft_5fobject_2eproto}, {
      &scc_info_CoreObject_proto_2fcore_2fcore_5fobject_2eproto.base,
      &scc_info_AstObject_proto_2fast_2fast_5fobject_2eproto.base,
      &scc_info_LibObject_proto_2flib_2flib_5fobject_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fsyft_5fobject_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fsyft_5fobject_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fsyft_5fobject_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fsyft_5fobject_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::SyftObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::SyftObject, core_obj_),
  PROTOBUF_FIELD_OFFSET(::syft::SyftObject, ast_obj_),
  PROTOBUF_FIELD_OFFSET(::syft::SyftObject, lib_obj_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syft::SyftObject)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::_SyftObject_default_instance_),
};

const char descriptor_table_protodef_proto_2fsyft_5fobject_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027proto/syft_object.proto\022\004syft\032\034proto/c"
  "ore/core_object.proto\032\032proto/ast/ast_obj"
  "ect.proto\032\032proto/lib/lib_object.proto\"\201\001"
  "\n\nSyftObject\022\'\n\010core_obj\030\001 \001(\0132\025.syft.co"
  "re.CoreObject\022$\n\007ast_obj\030\002 \001(\0132\023.syft.as"
  "t.AstObject\022$\n\007lib_obj\030\003 \001(\0132\023.syft.lib."
  "LibObjectb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fsyft_5fobject_2eproto_deps[3] = {
  &::descriptor_table_proto_2fast_2fast_5fobject_2eproto,
  &::descriptor_table_proto_2fcore_2fcore_5fobject_2eproto,
  &::descriptor_table_proto_2flib_2flib_5fobject_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fsyft_5fobject_2eproto_sccs[1] = {
  &scc_info_SyftObject_proto_2fsyft_5fobject_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fsyft_5fobject_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fsyft_5fobject_2eproto = {
  false, false, descriptor_table_protodef_proto_2fsyft_5fobject_2eproto, "proto/syft_object.proto", 257,
  &descriptor_table_proto_2fsyft_5fobject_2eproto_once, descriptor_table_proto_2fsyft_5fobject_2eproto_sccs, descriptor_table_proto_2fsyft_5fobject_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_proto_2fsyft_5fobject_2eproto::offsets,
  file_level_metadata_proto_2fsyft_5fobject_2eproto, 1, file_level_enum_descriptors_proto_2fsyft_5fobject_2eproto, file_level_service_descriptors_proto_2fsyft_5fobject_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fsyft_5fobject_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fsyft_5fobject_2eproto)), true);
namespace syft {

// ===================================================================

class SyftObject::_Internal {
 public:
  static const ::syft::core::CoreObject& core_obj(const SyftObject* msg);
  static const ::syft::ast::AstObject& ast_obj(const SyftObject* msg);
  static const ::syft::lib::LibObject& lib_obj(const SyftObject* msg);
};

const ::syft::core::CoreObject&
SyftObject::_Internal::core_obj(const SyftObject* msg) {
  return *msg->core_obj_;
}
const ::syft::ast::AstObject&
SyftObject::_Internal::ast_obj(const SyftObject* msg) {
  return *msg->ast_obj_;
}
const ::syft::lib::LibObject&
SyftObject::_Internal::lib_obj(const SyftObject* msg) {
  return *msg->lib_obj_;
}
void SyftObject::clear_core_obj() {
  if (GetArena() == nullptr && core_obj_ != nullptr) {
    delete core_obj_;
  }
  core_obj_ = nullptr;
}
void SyftObject::clear_ast_obj() {
  if (GetArena() == nullptr && ast_obj_ != nullptr) {
    delete ast_obj_;
  }
  ast_obj_ = nullptr;
}
void SyftObject::clear_lib_obj() {
  if (GetArena() == nullptr && lib_obj_ != nullptr) {
    delete lib_obj_;
  }
  lib_obj_ = nullptr;
}
SyftObject::SyftObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.SyftObject)
}
SyftObject::SyftObject(const SyftObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_core_obj()) {
    core_obj_ = new ::syft::core::CoreObject(*from.core_obj_);
  } else {
    core_obj_ = nullptr;
  }
  if (from._internal_has_ast_obj()) {
    ast_obj_ = new ::syft::ast::AstObject(*from.ast_obj_);
  } else {
    ast_obj_ = nullptr;
  }
  if (from._internal_has_lib_obj()) {
    lib_obj_ = new ::syft::lib::LibObject(*from.lib_obj_);
  } else {
    lib_obj_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.SyftObject)
}

void SyftObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyftObject_proto_2fsyft_5fobject_2eproto.base);
  ::memset(&core_obj_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lib_obj_) -
      reinterpret_cast<char*>(&core_obj_)) + sizeof(lib_obj_));
}

SyftObject::~SyftObject() {
  // @@protoc_insertion_point(destructor:syft.SyftObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SyftObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete core_obj_;
  if (this != internal_default_instance()) delete ast_obj_;
  if (this != internal_default_instance()) delete lib_obj_;
}

void SyftObject::ArenaDtor(void* object) {
  SyftObject* _this = reinterpret_cast< SyftObject* >(object);
  (void)_this;
}
void SyftObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SyftObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyftObject& SyftObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyftObject_proto_2fsyft_5fobject_2eproto.base);
  return *internal_default_instance();
}


void SyftObject::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.SyftObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && core_obj_ != nullptr) {
    delete core_obj_;
  }
  core_obj_ = nullptr;
  if (GetArena() == nullptr && ast_obj_ != nullptr) {
    delete ast_obj_;
  }
  ast_obj_ = nullptr;
  if (GetArena() == nullptr && lib_obj_ != nullptr) {
    delete lib_obj_;
  }
  lib_obj_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyftObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.CoreObject core_obj = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_core_obj(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.ast.AstObject ast_obj = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ast_obj(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.lib.LibObject lib_obj = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lib_obj(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SyftObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.SyftObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.CoreObject core_obj = 1;
  if (this->has_core_obj()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::core_obj(this), target, stream);
  }

  // .syft.ast.AstObject ast_obj = 2;
  if (this->has_ast_obj()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ast_obj(this), target, stream);
  }

  // .syft.lib.LibObject lib_obj = 3;
  if (this->has_lib_obj()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lib_obj(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.SyftObject)
  return target;
}

size_t SyftObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.SyftObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.CoreObject core_obj = 1;
  if (this->has_core_obj()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *core_obj_);
  }

  // .syft.ast.AstObject ast_obj = 2;
  if (this->has_ast_obj()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ast_obj_);
  }

  // .syft.lib.LibObject lib_obj = 3;
  if (this->has_lib_obj()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lib_obj_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyftObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.SyftObject)
  GOOGLE_DCHECK_NE(&from, this);
  const SyftObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyftObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.SyftObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.SyftObject)
    MergeFrom(*source);
  }
}

void SyftObject::MergeFrom(const SyftObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.SyftObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_core_obj()) {
    _internal_mutable_core_obj()->::syft::core::CoreObject::MergeFrom(from._internal_core_obj());
  }
  if (from.has_ast_obj()) {
    _internal_mutable_ast_obj()->::syft::ast::AstObject::MergeFrom(from._internal_ast_obj());
  }
  if (from.has_lib_obj()) {
    _internal_mutable_lib_obj()->::syft::lib::LibObject::MergeFrom(from._internal_lib_obj());
  }
}

void SyftObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.SyftObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyftObject::CopyFrom(const SyftObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.SyftObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyftObject::IsInitialized() const {
  return true;
}

void SyftObject::InternalSwap(SyftObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyftObject, lib_obj_)
      + sizeof(SyftObject::lib_obj_)
      - PROTOBUF_FIELD_OFFSET(SyftObject, core_obj_)>(
          reinterpret_cast<char*>(&core_obj_),
          reinterpret_cast<char*>(&other->core_obj_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyftObject::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syft::SyftObject* Arena::CreateMaybeMessage< ::syft::SyftObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::SyftObject >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
