// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/grid/service/signaling_service.proto

#include "proto/grid/service/signaling_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcore_2fio_2faddress_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Address_proto_2fcore_2fio_2faddress_2eproto;
namespace syft {
namespace grid {
namespace service {
class SignalingAnswerMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignalingAnswerMessage> _instance;
} _SignalingAnswerMessage_default_instance_;
class SignalingOfferMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignalingOfferMessage> _instance;
} _SignalingOfferMessage_default_instance_;
class OfferPullRequestMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OfferPullRequestMessage> _instance;
} _OfferPullRequestMessage_default_instance_;
class AnswerPullRequestMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AnswerPullRequestMessage> _instance;
} _AnswerPullRequestMessage_default_instance_;
class SignalingRequestsNotFoundDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignalingRequestsNotFound> _instance;
} _SignalingRequestsNotFound_default_instance_;
}  // namespace service
}  // namespace grid
}  // namespace syft
static void InitDefaultsscc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::grid::service::_AnswerPullRequestMessage_default_instance_;
    new (ptr) ::syft::grid::service::AnswerPullRequestMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static void InitDefaultsscc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::grid::service::_OfferPullRequestMessage_default_instance_;
    new (ptr) ::syft::grid::service::OfferPullRequestMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static void InitDefaultsscc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::grid::service::_SignalingAnswerMessage_default_instance_;
    new (ptr) ::syft::grid::service::SignalingAnswerMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static void InitDefaultsscc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::grid::service::_SignalingOfferMessage_default_instance_;
    new (ptr) ::syft::grid::service::SignalingOfferMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static void InitDefaultsscc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::syft::grid::service::_SignalingRequestsNotFound_default_instance_;
    new (ptr) ::syft::grid::service::SignalingRequestsNotFound();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto}, {
      &scc_info_UID_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto.base,
      &scc_info_Address_proto_2fcore_2fio_2faddress_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, msg_id_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, address_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, payload_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, host_metadata_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, target_peer_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingAnswerMessage, host_peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, msg_id_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, address_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, payload_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, host_metadata_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, target_peer_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingOfferMessage, host_peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, msg_id_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, address_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, reply_to_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, target_peer_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::OfferPullRequestMessage, host_peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, msg_id_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, address_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, reply_to_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, target_peer_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::AnswerPullRequestMessage, host_peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingRequestsNotFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingRequestsNotFound, msg_id_),
  PROTOBUF_FIELD_OFFSET(::syft::grid::service::SignalingRequestsNotFound, address_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::syft::grid::service::SignalingAnswerMessage)},
  { 11, -1, sizeof(::syft::grid::service::SignalingOfferMessage)},
  { 22, -1, sizeof(::syft::grid::service::OfferPullRequestMessage)},
  { 32, -1, sizeof(::syft::grid::service::AnswerPullRequestMessage)},
  { 42, -1, sizeof(::syft::grid::service::SignalingRequestsNotFound)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::grid::service::_SignalingAnswerMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::grid::service::_SignalingOfferMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::grid::service::_OfferPullRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::grid::service::_AnswerPullRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::syft::grid::service::_SignalingRequestsNotFound_default_instance_),
};

const char descriptor_table_protodef_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*proto/grid/service/signaling_service.p"
  "roto\022\021syft.grid.service\032%proto/core/comm"
  "on/common_object.proto\032\033proto/core/io/ad"
  "dress.proto\"\345\001\n\026SignalingAnswerMessage\022%"
  "\n\006msg_id\030\001 \001(\0132\025.syft.core.common.UID\022&\n"
  "\007address\030\002 \001(\0132\025.syft.core.io.Address\022\017\n"
  "\007payload\030\003 \001(\t\022\025\n\rhost_metadata\030\004 \001(\t\022*\n"
  "\013target_peer\030\005 \001(\0132\025.syft.core.io.Addres"
  "s\022(\n\thost_peer\030\006 \001(\0132\025.syft.core.io.Addr"
  "ess\"\344\001\n\025SignalingOfferMessage\022%\n\006msg_id\030"
  "\001 \001(\0132\025.syft.core.common.UID\022&\n\007address\030"
  "\002 \001(\0132\025.syft.core.io.Address\022\017\n\007payload\030"
  "\003 \001(\t\022\025\n\rhost_metadata\030\004 \001(\t\022*\n\013target_p"
  "eer\030\005 \001(\0132\025.syft.core.io.Address\022(\n\thost"
  "_peer\030\006 \001(\0132\025.syft.core.io.Address\"\347\001\n\027O"
  "fferPullRequestMessage\022%\n\006msg_id\030\001 \001(\0132\025"
  ".syft.core.common.UID\022&\n\007address\030\002 \001(\0132\025"
  ".syft.core.io.Address\022\'\n\010reply_to\030\003 \001(\0132"
  "\025.syft.core.io.Address\022*\n\013target_peer\030\004 "
  "\001(\0132\025.syft.core.io.Address\022(\n\thost_peer\030"
  "\005 \001(\0132\025.syft.core.io.Address\"\350\001\n\030AnswerP"
  "ullRequestMessage\022%\n\006msg_id\030\001 \001(\0132\025.syft"
  ".core.common.UID\022&\n\007address\030\002 \001(\0132\025.syft"
  ".core.io.Address\022\'\n\010reply_to\030\003 \001(\0132\025.syf"
  "t.core.io.Address\022*\n\013target_peer\030\004 \001(\0132\025"
  ".syft.core.io.Address\022(\n\thost_peer\030\005 \001(\013"
  "2\025.syft.core.io.Address\"j\n\031SignalingRequ"
  "estsNotFound\022%\n\006msg_id\030\001 \001(\0132\025.syft.core"
  ".common.UID\022&\n\007address\030\002 \001(\0132\025.syft.core"
  ".io.Addressb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_deps[2] = {
  &::descriptor_table_proto_2fcore_2fcommon_2fcommon_5fobject_2eproto,
  &::descriptor_table_proto_2fcore_2fio_2faddress_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_sccs[5] = {
  &scc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base,
  &scc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base,
  &scc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base,
  &scc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base,
  &scc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto = {
  false, false, descriptor_table_protodef_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto, "proto/grid/service/signaling_service.proto", 1179,
  &descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_once, descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_sccs, descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto_deps, 5, 2,
  schemas, file_default_instances, TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto::offsets,
  file_level_metadata_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto, 5, file_level_enum_descriptors_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto, file_level_service_descriptors_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto)), true);
namespace syft {
namespace grid {
namespace service {

// ===================================================================

class SignalingAnswerMessage::_Internal {
 public:
  static const ::syft::core::common::UID& msg_id(const SignalingAnswerMessage* msg);
  static const ::syft::core::io::Address& address(const SignalingAnswerMessage* msg);
  static const ::syft::core::io::Address& target_peer(const SignalingAnswerMessage* msg);
  static const ::syft::core::io::Address& host_peer(const SignalingAnswerMessage* msg);
};

const ::syft::core::common::UID&
SignalingAnswerMessage::_Internal::msg_id(const SignalingAnswerMessage* msg) {
  return *msg->msg_id_;
}
const ::syft::core::io::Address&
SignalingAnswerMessage::_Internal::address(const SignalingAnswerMessage* msg) {
  return *msg->address_;
}
const ::syft::core::io::Address&
SignalingAnswerMessage::_Internal::target_peer(const SignalingAnswerMessage* msg) {
  return *msg->target_peer_;
}
const ::syft::core::io::Address&
SignalingAnswerMessage::_Internal::host_peer(const SignalingAnswerMessage* msg) {
  return *msg->host_peer_;
}
void SignalingAnswerMessage::clear_msg_id() {
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
}
void SignalingAnswerMessage::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
void SignalingAnswerMessage::clear_target_peer() {
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
}
void SignalingAnswerMessage::clear_host_peer() {
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
}
SignalingAnswerMessage::SignalingAnswerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.grid.service.SignalingAnswerMessage)
}
SignalingAnswerMessage::SignalingAnswerMessage(const SignalingAnswerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  host_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host_metadata().empty()) {
    host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host_metadata(),
      GetArena());
  }
  if (from._internal_has_msg_id()) {
    msg_id_ = new ::syft::core::common::UID(*from.msg_id_);
  } else {
    msg_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_target_peer()) {
    target_peer_ = new ::syft::core::io::Address(*from.target_peer_);
  } else {
    target_peer_ = nullptr;
  }
  if (from._internal_has_host_peer()) {
    host_peer_ = new ::syft::core::io::Address(*from.host_peer_);
  } else {
    host_peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.grid.service.SignalingAnswerMessage)
}

void SignalingAnswerMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(host_peer_));
}

SignalingAnswerMessage::~SignalingAnswerMessage() {
  // @@protoc_insertion_point(destructor:syft.grid.service.SignalingAnswerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignalingAnswerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_metadata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_id_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete target_peer_;
  if (this != internal_default_instance()) delete host_peer_;
}

void SignalingAnswerMessage::ArenaDtor(void* object) {
  SignalingAnswerMessage* _this = reinterpret_cast< SignalingAnswerMessage* >(object);
  (void)_this;
}
void SignalingAnswerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignalingAnswerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignalingAnswerMessage& SignalingAnswerMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignalingAnswerMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SignalingAnswerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.grid.service.SignalingAnswerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignalingAnswerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.grid.service.SignalingAnswerMessage.payload"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host_metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_host_metadata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.grid.service.SignalingAnswerMessage.host_metadata"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address target_peer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address host_peer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_host_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignalingAnswerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.grid.service.SignalingAnswerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msg_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  // string payload = 3;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.grid.service.SignalingAnswerMessage.payload");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_payload(), target);
  }

  // string host_metadata = 4;
  if (this->host_metadata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_metadata().data(), static_cast<int>(this->_internal_host_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.grid.service.SignalingAnswerMessage.host_metadata");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_host_metadata(), target);
  }

  // .syft.core.io.Address target_peer = 5;
  if (this->has_target_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::target_peer(this), target, stream);
  }

  // .syft.core.io.Address host_peer = 6;
  if (this->has_host_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::host_peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.grid.service.SignalingAnswerMessage)
  return target;
}

size_t SignalingAnswerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.grid.service.SignalingAnswerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 3;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  // string host_metadata = 4;
  if (this->host_metadata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_metadata());
  }

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .syft.core.io.Address target_peer = 5;
  if (this->has_target_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_peer_);
  }

  // .syft.core.io.Address host_peer = 6;
  if (this->has_host_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalingAnswerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.grid.service.SignalingAnswerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalingAnswerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignalingAnswerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.grid.service.SignalingAnswerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.grid.service.SignalingAnswerMessage)
    MergeFrom(*source);
  }
}

void SignalingAnswerMessage::MergeFrom(const SignalingAnswerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.grid.service.SignalingAnswerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.host_metadata().size() > 0) {
    _internal_set_host_metadata(from._internal_host_metadata());
  }
  if (from.has_msg_id()) {
    _internal_mutable_msg_id()->::syft::core::common::UID::MergeFrom(from._internal_msg_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
  if (from.has_target_peer()) {
    _internal_mutable_target_peer()->::syft::core::io::Address::MergeFrom(from._internal_target_peer());
  }
  if (from.has_host_peer()) {
    _internal_mutable_host_peer()->::syft::core::io::Address::MergeFrom(from._internal_host_peer());
  }
}

void SignalingAnswerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.grid.service.SignalingAnswerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalingAnswerMessage::CopyFrom(const SignalingAnswerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.grid.service.SignalingAnswerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalingAnswerMessage::IsInitialized() const {
  return true;
}

void SignalingAnswerMessage::InternalSwap(SignalingAnswerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_metadata_.Swap(&other->host_metadata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignalingAnswerMessage, host_peer_)
      + sizeof(SignalingAnswerMessage::host_peer_)
      - PROTOBUF_FIELD_OFFSET(SignalingAnswerMessage, msg_id_)>(
          reinterpret_cast<char*>(&msg_id_),
          reinterpret_cast<char*>(&other->msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SignalingAnswerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SignalingOfferMessage::_Internal {
 public:
  static const ::syft::core::common::UID& msg_id(const SignalingOfferMessage* msg);
  static const ::syft::core::io::Address& address(const SignalingOfferMessage* msg);
  static const ::syft::core::io::Address& target_peer(const SignalingOfferMessage* msg);
  static const ::syft::core::io::Address& host_peer(const SignalingOfferMessage* msg);
};

const ::syft::core::common::UID&
SignalingOfferMessage::_Internal::msg_id(const SignalingOfferMessage* msg) {
  return *msg->msg_id_;
}
const ::syft::core::io::Address&
SignalingOfferMessage::_Internal::address(const SignalingOfferMessage* msg) {
  return *msg->address_;
}
const ::syft::core::io::Address&
SignalingOfferMessage::_Internal::target_peer(const SignalingOfferMessage* msg) {
  return *msg->target_peer_;
}
const ::syft::core::io::Address&
SignalingOfferMessage::_Internal::host_peer(const SignalingOfferMessage* msg) {
  return *msg->host_peer_;
}
void SignalingOfferMessage::clear_msg_id() {
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
}
void SignalingOfferMessage::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
void SignalingOfferMessage::clear_target_peer() {
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
}
void SignalingOfferMessage::clear_host_peer() {
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
}
SignalingOfferMessage::SignalingOfferMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.grid.service.SignalingOfferMessage)
}
SignalingOfferMessage::SignalingOfferMessage(const SignalingOfferMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  host_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host_metadata().empty()) {
    host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host_metadata(),
      GetArena());
  }
  if (from._internal_has_msg_id()) {
    msg_id_ = new ::syft::core::common::UID(*from.msg_id_);
  } else {
    msg_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_target_peer()) {
    target_peer_ = new ::syft::core::io::Address(*from.target_peer_);
  } else {
    target_peer_ = nullptr;
  }
  if (from._internal_has_host_peer()) {
    host_peer_ = new ::syft::core::io::Address(*from.host_peer_);
  } else {
    host_peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.grid.service.SignalingOfferMessage)
}

void SignalingOfferMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(host_peer_));
}

SignalingOfferMessage::~SignalingOfferMessage() {
  // @@protoc_insertion_point(destructor:syft.grid.service.SignalingOfferMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignalingOfferMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_metadata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_id_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete target_peer_;
  if (this != internal_default_instance()) delete host_peer_;
}

void SignalingOfferMessage::ArenaDtor(void* object) {
  SignalingOfferMessage* _this = reinterpret_cast< SignalingOfferMessage* >(object);
  (void)_this;
}
void SignalingOfferMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignalingOfferMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignalingOfferMessage& SignalingOfferMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignalingOfferMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SignalingOfferMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.grid.service.SignalingOfferMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignalingOfferMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.grid.service.SignalingOfferMessage.payload"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host_metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_host_metadata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "syft.grid.service.SignalingOfferMessage.host_metadata"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address target_peer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address host_peer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_host_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignalingOfferMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.grid.service.SignalingOfferMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msg_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  // string payload = 3;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.grid.service.SignalingOfferMessage.payload");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_payload(), target);
  }

  // string host_metadata = 4;
  if (this->host_metadata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_metadata().data(), static_cast<int>(this->_internal_host_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "syft.grid.service.SignalingOfferMessage.host_metadata");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_host_metadata(), target);
  }

  // .syft.core.io.Address target_peer = 5;
  if (this->has_target_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::target_peer(this), target, stream);
  }

  // .syft.core.io.Address host_peer = 6;
  if (this->has_host_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::host_peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.grid.service.SignalingOfferMessage)
  return target;
}

size_t SignalingOfferMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.grid.service.SignalingOfferMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 3;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  // string host_metadata = 4;
  if (this->host_metadata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_metadata());
  }

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .syft.core.io.Address target_peer = 5;
  if (this->has_target_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_peer_);
  }

  // .syft.core.io.Address host_peer = 6;
  if (this->has_host_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalingOfferMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.grid.service.SignalingOfferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalingOfferMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignalingOfferMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.grid.service.SignalingOfferMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.grid.service.SignalingOfferMessage)
    MergeFrom(*source);
  }
}

void SignalingOfferMessage::MergeFrom(const SignalingOfferMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.grid.service.SignalingOfferMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.host_metadata().size() > 0) {
    _internal_set_host_metadata(from._internal_host_metadata());
  }
  if (from.has_msg_id()) {
    _internal_mutable_msg_id()->::syft::core::common::UID::MergeFrom(from._internal_msg_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
  if (from.has_target_peer()) {
    _internal_mutable_target_peer()->::syft::core::io::Address::MergeFrom(from._internal_target_peer());
  }
  if (from.has_host_peer()) {
    _internal_mutable_host_peer()->::syft::core::io::Address::MergeFrom(from._internal_host_peer());
  }
}

void SignalingOfferMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.grid.service.SignalingOfferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalingOfferMessage::CopyFrom(const SignalingOfferMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.grid.service.SignalingOfferMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalingOfferMessage::IsInitialized() const {
  return true;
}

void SignalingOfferMessage::InternalSwap(SignalingOfferMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_metadata_.Swap(&other->host_metadata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignalingOfferMessage, host_peer_)
      + sizeof(SignalingOfferMessage::host_peer_)
      - PROTOBUF_FIELD_OFFSET(SignalingOfferMessage, msg_id_)>(
          reinterpret_cast<char*>(&msg_id_),
          reinterpret_cast<char*>(&other->msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SignalingOfferMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OfferPullRequestMessage::_Internal {
 public:
  static const ::syft::core::common::UID& msg_id(const OfferPullRequestMessage* msg);
  static const ::syft::core::io::Address& address(const OfferPullRequestMessage* msg);
  static const ::syft::core::io::Address& reply_to(const OfferPullRequestMessage* msg);
  static const ::syft::core::io::Address& target_peer(const OfferPullRequestMessage* msg);
  static const ::syft::core::io::Address& host_peer(const OfferPullRequestMessage* msg);
};

const ::syft::core::common::UID&
OfferPullRequestMessage::_Internal::msg_id(const OfferPullRequestMessage* msg) {
  return *msg->msg_id_;
}
const ::syft::core::io::Address&
OfferPullRequestMessage::_Internal::address(const OfferPullRequestMessage* msg) {
  return *msg->address_;
}
const ::syft::core::io::Address&
OfferPullRequestMessage::_Internal::reply_to(const OfferPullRequestMessage* msg) {
  return *msg->reply_to_;
}
const ::syft::core::io::Address&
OfferPullRequestMessage::_Internal::target_peer(const OfferPullRequestMessage* msg) {
  return *msg->target_peer_;
}
const ::syft::core::io::Address&
OfferPullRequestMessage::_Internal::host_peer(const OfferPullRequestMessage* msg) {
  return *msg->host_peer_;
}
void OfferPullRequestMessage::clear_msg_id() {
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
}
void OfferPullRequestMessage::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
void OfferPullRequestMessage::clear_reply_to() {
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
}
void OfferPullRequestMessage::clear_target_peer() {
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
}
void OfferPullRequestMessage::clear_host_peer() {
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
}
OfferPullRequestMessage::OfferPullRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.grid.service.OfferPullRequestMessage)
}
OfferPullRequestMessage::OfferPullRequestMessage(const OfferPullRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_msg_id()) {
    msg_id_ = new ::syft::core::common::UID(*from.msg_id_);
  } else {
    msg_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_reply_to()) {
    reply_to_ = new ::syft::core::io::Address(*from.reply_to_);
  } else {
    reply_to_ = nullptr;
  }
  if (from._internal_has_target_peer()) {
    target_peer_ = new ::syft::core::io::Address(*from.target_peer_);
  } else {
    target_peer_ = nullptr;
  }
  if (from._internal_has_host_peer()) {
    host_peer_ = new ::syft::core::io::Address(*from.host_peer_);
  } else {
    host_peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.grid.service.OfferPullRequestMessage)
}

void OfferPullRequestMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(host_peer_));
}

OfferPullRequestMessage::~OfferPullRequestMessage() {
  // @@protoc_insertion_point(destructor:syft.grid.service.OfferPullRequestMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OfferPullRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete msg_id_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete reply_to_;
  if (this != internal_default_instance()) delete target_peer_;
  if (this != internal_default_instance()) delete host_peer_;
}

void OfferPullRequestMessage::ArenaDtor(void* object) {
  OfferPullRequestMessage* _this = reinterpret_cast< OfferPullRequestMessage* >(object);
  (void)_this;
}
void OfferPullRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OfferPullRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OfferPullRequestMessage& OfferPullRequestMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OfferPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  return *internal_default_instance();
}


void OfferPullRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.grid.service.OfferPullRequestMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfferPullRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address reply_to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_to(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address target_peer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address host_peer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_host_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OfferPullRequestMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.grid.service.OfferPullRequestMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msg_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reply_to(this), target, stream);
  }

  // .syft.core.io.Address target_peer = 4;
  if (this->has_target_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::target_peer(this), target, stream);
  }

  // .syft.core.io.Address host_peer = 5;
  if (this->has_host_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::host_peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.grid.service.OfferPullRequestMessage)
  return target;
}

size_t OfferPullRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.grid.service.OfferPullRequestMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_to_);
  }

  // .syft.core.io.Address target_peer = 4;
  if (this->has_target_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_peer_);
  }

  // .syft.core.io.Address host_peer = 5;
  if (this->has_host_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OfferPullRequestMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.grid.service.OfferPullRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OfferPullRequestMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OfferPullRequestMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.grid.service.OfferPullRequestMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.grid.service.OfferPullRequestMessage)
    MergeFrom(*source);
  }
}

void OfferPullRequestMessage::MergeFrom(const OfferPullRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.grid.service.OfferPullRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_id()) {
    _internal_mutable_msg_id()->::syft::core::common::UID::MergeFrom(from._internal_msg_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
  if (from.has_reply_to()) {
    _internal_mutable_reply_to()->::syft::core::io::Address::MergeFrom(from._internal_reply_to());
  }
  if (from.has_target_peer()) {
    _internal_mutable_target_peer()->::syft::core::io::Address::MergeFrom(from._internal_target_peer());
  }
  if (from.has_host_peer()) {
    _internal_mutable_host_peer()->::syft::core::io::Address::MergeFrom(from._internal_host_peer());
  }
}

void OfferPullRequestMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.grid.service.OfferPullRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfferPullRequestMessage::CopyFrom(const OfferPullRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.grid.service.OfferPullRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfferPullRequestMessage::IsInitialized() const {
  return true;
}

void OfferPullRequestMessage::InternalSwap(OfferPullRequestMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OfferPullRequestMessage, host_peer_)
      + sizeof(OfferPullRequestMessage::host_peer_)
      - PROTOBUF_FIELD_OFFSET(OfferPullRequestMessage, msg_id_)>(
          reinterpret_cast<char*>(&msg_id_),
          reinterpret_cast<char*>(&other->msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OfferPullRequestMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AnswerPullRequestMessage::_Internal {
 public:
  static const ::syft::core::common::UID& msg_id(const AnswerPullRequestMessage* msg);
  static const ::syft::core::io::Address& address(const AnswerPullRequestMessage* msg);
  static const ::syft::core::io::Address& reply_to(const AnswerPullRequestMessage* msg);
  static const ::syft::core::io::Address& target_peer(const AnswerPullRequestMessage* msg);
  static const ::syft::core::io::Address& host_peer(const AnswerPullRequestMessage* msg);
};

const ::syft::core::common::UID&
AnswerPullRequestMessage::_Internal::msg_id(const AnswerPullRequestMessage* msg) {
  return *msg->msg_id_;
}
const ::syft::core::io::Address&
AnswerPullRequestMessage::_Internal::address(const AnswerPullRequestMessage* msg) {
  return *msg->address_;
}
const ::syft::core::io::Address&
AnswerPullRequestMessage::_Internal::reply_to(const AnswerPullRequestMessage* msg) {
  return *msg->reply_to_;
}
const ::syft::core::io::Address&
AnswerPullRequestMessage::_Internal::target_peer(const AnswerPullRequestMessage* msg) {
  return *msg->target_peer_;
}
const ::syft::core::io::Address&
AnswerPullRequestMessage::_Internal::host_peer(const AnswerPullRequestMessage* msg) {
  return *msg->host_peer_;
}
void AnswerPullRequestMessage::clear_msg_id() {
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
}
void AnswerPullRequestMessage::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
void AnswerPullRequestMessage::clear_reply_to() {
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
}
void AnswerPullRequestMessage::clear_target_peer() {
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
}
void AnswerPullRequestMessage::clear_host_peer() {
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
}
AnswerPullRequestMessage::AnswerPullRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.grid.service.AnswerPullRequestMessage)
}
AnswerPullRequestMessage::AnswerPullRequestMessage(const AnswerPullRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_msg_id()) {
    msg_id_ = new ::syft::core::common::UID(*from.msg_id_);
  } else {
    msg_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  if (from._internal_has_reply_to()) {
    reply_to_ = new ::syft::core::io::Address(*from.reply_to_);
  } else {
    reply_to_ = nullptr;
  }
  if (from._internal_has_target_peer()) {
    target_peer_ = new ::syft::core::io::Address(*from.target_peer_);
  } else {
    target_peer_ = nullptr;
  }
  if (from._internal_has_host_peer()) {
    host_peer_ = new ::syft::core::io::Address(*from.host_peer_);
  } else {
    host_peer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.grid.service.AnswerPullRequestMessage)
}

void AnswerPullRequestMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(host_peer_));
}

AnswerPullRequestMessage::~AnswerPullRequestMessage() {
  // @@protoc_insertion_point(destructor:syft.grid.service.AnswerPullRequestMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AnswerPullRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete msg_id_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete reply_to_;
  if (this != internal_default_instance()) delete target_peer_;
  if (this != internal_default_instance()) delete host_peer_;
}

void AnswerPullRequestMessage::ArenaDtor(void* object) {
  AnswerPullRequestMessage* _this = reinterpret_cast< AnswerPullRequestMessage* >(object);
  (void)_this;
}
void AnswerPullRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AnswerPullRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnswerPullRequestMessage& AnswerPullRequestMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AnswerPullRequestMessage_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AnswerPullRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.grid.service.AnswerPullRequestMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  if (GetArena() == nullptr && reply_to_ != nullptr) {
    delete reply_to_;
  }
  reply_to_ = nullptr;
  if (GetArena() == nullptr && target_peer_ != nullptr) {
    delete target_peer_;
  }
  target_peer_ = nullptr;
  if (GetArena() == nullptr && host_peer_ != nullptr) {
    delete host_peer_;
  }
  host_peer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnswerPullRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address reply_to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_to(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address target_peer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address host_peer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_host_peer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnswerPullRequestMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.grid.service.AnswerPullRequestMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msg_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reply_to(this), target, stream);
  }

  // .syft.core.io.Address target_peer = 4;
  if (this->has_target_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::target_peer(this), target, stream);
  }

  // .syft.core.io.Address host_peer = 5;
  if (this->has_host_peer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::host_peer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.grid.service.AnswerPullRequestMessage)
  return target;
}

size_t AnswerPullRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.grid.service.AnswerPullRequestMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .syft.core.io.Address reply_to = 3;
  if (this->has_reply_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_to_);
  }

  // .syft.core.io.Address target_peer = 4;
  if (this->has_target_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_peer_);
  }

  // .syft.core.io.Address host_peer = 5;
  if (this->has_host_peer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_peer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnswerPullRequestMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.grid.service.AnswerPullRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AnswerPullRequestMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnswerPullRequestMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.grid.service.AnswerPullRequestMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.grid.service.AnswerPullRequestMessage)
    MergeFrom(*source);
  }
}

void AnswerPullRequestMessage::MergeFrom(const AnswerPullRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.grid.service.AnswerPullRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_id()) {
    _internal_mutable_msg_id()->::syft::core::common::UID::MergeFrom(from._internal_msg_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
  if (from.has_reply_to()) {
    _internal_mutable_reply_to()->::syft::core::io::Address::MergeFrom(from._internal_reply_to());
  }
  if (from.has_target_peer()) {
    _internal_mutable_target_peer()->::syft::core::io::Address::MergeFrom(from._internal_target_peer());
  }
  if (from.has_host_peer()) {
    _internal_mutable_host_peer()->::syft::core::io::Address::MergeFrom(from._internal_host_peer());
  }
}

void AnswerPullRequestMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.grid.service.AnswerPullRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnswerPullRequestMessage::CopyFrom(const AnswerPullRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.grid.service.AnswerPullRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnswerPullRequestMessage::IsInitialized() const {
  return true;
}

void AnswerPullRequestMessage::InternalSwap(AnswerPullRequestMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnswerPullRequestMessage, host_peer_)
      + sizeof(AnswerPullRequestMessage::host_peer_)
      - PROTOBUF_FIELD_OFFSET(AnswerPullRequestMessage, msg_id_)>(
          reinterpret_cast<char*>(&msg_id_),
          reinterpret_cast<char*>(&other->msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AnswerPullRequestMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SignalingRequestsNotFound::_Internal {
 public:
  static const ::syft::core::common::UID& msg_id(const SignalingRequestsNotFound* msg);
  static const ::syft::core::io::Address& address(const SignalingRequestsNotFound* msg);
};

const ::syft::core::common::UID&
SignalingRequestsNotFound::_Internal::msg_id(const SignalingRequestsNotFound* msg) {
  return *msg->msg_id_;
}
const ::syft::core::io::Address&
SignalingRequestsNotFound::_Internal::address(const SignalingRequestsNotFound* msg) {
  return *msg->address_;
}
void SignalingRequestsNotFound::clear_msg_id() {
  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
}
void SignalingRequestsNotFound::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
SignalingRequestsNotFound::SignalingRequestsNotFound(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:syft.grid.service.SignalingRequestsNotFound)
}
SignalingRequestsNotFound::SignalingRequestsNotFound(const SignalingRequestsNotFound& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_msg_id()) {
    msg_id_ = new ::syft::core::common::UID(*from.msg_id_);
  } else {
    msg_id_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new ::syft::core::io::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:syft.grid.service.SignalingRequestsNotFound)
}

void SignalingRequestsNotFound::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(address_));
}

SignalingRequestsNotFound::~SignalingRequestsNotFound() {
  // @@protoc_insertion_point(destructor:syft.grid.service.SignalingRequestsNotFound)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignalingRequestsNotFound::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete msg_id_;
  if (this != internal_default_instance()) delete address_;
}

void SignalingRequestsNotFound::ArenaDtor(void* object) {
  SignalingRequestsNotFound* _this = reinterpret_cast< SignalingRequestsNotFound* >(object);
  (void)_this;
}
void SignalingRequestsNotFound::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignalingRequestsNotFound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignalingRequestsNotFound& SignalingRequestsNotFound::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignalingRequestsNotFound_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SignalingRequestsNotFound::Clear() {
// @@protoc_insertion_point(message_clear_start:syft.grid.service.SignalingRequestsNotFound)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && msg_id_ != nullptr) {
    delete msg_id_;
  }
  msg_id_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignalingRequestsNotFound::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .syft.core.common.UID msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .syft.core.io.Address address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignalingRequestsNotFound::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:syft.grid.service.SignalingRequestsNotFound)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msg_id(this), target, stream);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::address(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:syft.grid.service.SignalingRequestsNotFound)
  return target;
}

size_t SignalingRequestsNotFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:syft.grid.service.SignalingRequestsNotFound)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .syft.core.common.UID msg_id = 1;
  if (this->has_msg_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_id_);
  }

  // .syft.core.io.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignalingRequestsNotFound::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:syft.grid.service.SignalingRequestsNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  const SignalingRequestsNotFound* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignalingRequestsNotFound>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:syft.grid.service.SignalingRequestsNotFound)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:syft.grid.service.SignalingRequestsNotFound)
    MergeFrom(*source);
  }
}

void SignalingRequestsNotFound::MergeFrom(const SignalingRequestsNotFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:syft.grid.service.SignalingRequestsNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_id()) {
    _internal_mutable_msg_id()->::syft::core::common::UID::MergeFrom(from._internal_msg_id());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::syft::core::io::Address::MergeFrom(from._internal_address());
  }
}

void SignalingRequestsNotFound::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:syft.grid.service.SignalingRequestsNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignalingRequestsNotFound::CopyFrom(const SignalingRequestsNotFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:syft.grid.service.SignalingRequestsNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignalingRequestsNotFound::IsInitialized() const {
  return true;
}

void SignalingRequestsNotFound::InternalSwap(SignalingRequestsNotFound* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignalingRequestsNotFound, address_)
      + sizeof(SignalingRequestsNotFound::address_)
      - PROTOBUF_FIELD_OFFSET(SignalingRequestsNotFound, msg_id_)>(
          reinterpret_cast<char*>(&msg_id_),
          reinterpret_cast<char*>(&other->msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SignalingRequestsNotFound::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace grid
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::syft::grid::service::SignalingAnswerMessage* Arena::CreateMaybeMessage< ::syft::grid::service::SignalingAnswerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::grid::service::SignalingAnswerMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::grid::service::SignalingOfferMessage* Arena::CreateMaybeMessage< ::syft::grid::service::SignalingOfferMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::grid::service::SignalingOfferMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::grid::service::OfferPullRequestMessage* Arena::CreateMaybeMessage< ::syft::grid::service::OfferPullRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::grid::service::OfferPullRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::grid::service::AnswerPullRequestMessage* Arena::CreateMaybeMessage< ::syft::grid::service::AnswerPullRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::grid::service::AnswerPullRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::syft::grid::service::SignalingRequestsNotFound* Arena::CreateMaybeMessage< ::syft::grid::service::SignalingRequestsNotFound >(Arena* arena) {
  return Arena::CreateMessageInternal< ::syft::grid::service::SignalingRequestsNotFound >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
