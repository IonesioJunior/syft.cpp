// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/grid/service/signaling_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/core/common/common_object.pb.h"
#include "proto/core/io/address.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
namespace syft {
namespace grid {
namespace service {
class AnswerPullRequestMessage;
class AnswerPullRequestMessageDefaultTypeInternal;
extern AnswerPullRequestMessageDefaultTypeInternal _AnswerPullRequestMessage_default_instance_;
class OfferPullRequestMessage;
class OfferPullRequestMessageDefaultTypeInternal;
extern OfferPullRequestMessageDefaultTypeInternal _OfferPullRequestMessage_default_instance_;
class SignalingAnswerMessage;
class SignalingAnswerMessageDefaultTypeInternal;
extern SignalingAnswerMessageDefaultTypeInternal _SignalingAnswerMessage_default_instance_;
class SignalingOfferMessage;
class SignalingOfferMessageDefaultTypeInternal;
extern SignalingOfferMessageDefaultTypeInternal _SignalingOfferMessage_default_instance_;
class SignalingRequestsNotFound;
class SignalingRequestsNotFoundDefaultTypeInternal;
extern SignalingRequestsNotFoundDefaultTypeInternal _SignalingRequestsNotFound_default_instance_;
}  // namespace service
}  // namespace grid
}  // namespace syft
PROTOBUF_NAMESPACE_OPEN
template<> ::syft::grid::service::AnswerPullRequestMessage* Arena::CreateMaybeMessage<::syft::grid::service::AnswerPullRequestMessage>(Arena*);
template<> ::syft::grid::service::OfferPullRequestMessage* Arena::CreateMaybeMessage<::syft::grid::service::OfferPullRequestMessage>(Arena*);
template<> ::syft::grid::service::SignalingAnswerMessage* Arena::CreateMaybeMessage<::syft::grid::service::SignalingAnswerMessage>(Arena*);
template<> ::syft::grid::service::SignalingOfferMessage* Arena::CreateMaybeMessage<::syft::grid::service::SignalingOfferMessage>(Arena*);
template<> ::syft::grid::service::SignalingRequestsNotFound* Arena::CreateMaybeMessage<::syft::grid::service::SignalingRequestsNotFound>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace syft {
namespace grid {
namespace service {

// ===================================================================

class SignalingAnswerMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.grid.service.SignalingAnswerMessage) */ {
 public:
  inline SignalingAnswerMessage() : SignalingAnswerMessage(nullptr) {}
  virtual ~SignalingAnswerMessage();

  SignalingAnswerMessage(const SignalingAnswerMessage& from);
  SignalingAnswerMessage(SignalingAnswerMessage&& from) noexcept
    : SignalingAnswerMessage() {
    *this = ::std::move(from);
  }

  inline SignalingAnswerMessage& operator=(const SignalingAnswerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalingAnswerMessage& operator=(SignalingAnswerMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalingAnswerMessage& default_instance();

  static inline const SignalingAnswerMessage* internal_default_instance() {
    return reinterpret_cast<const SignalingAnswerMessage*>(
               &_SignalingAnswerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SignalingAnswerMessage& a, SignalingAnswerMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalingAnswerMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignalingAnswerMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalingAnswerMessage* New() const final {
    return CreateMaybeMessage<SignalingAnswerMessage>(nullptr);
  }

  SignalingAnswerMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalingAnswerMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalingAnswerMessage& from);
  void MergeFrom(const SignalingAnswerMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalingAnswerMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.grid.service.SignalingAnswerMessage";
  }
  protected:
  explicit SignalingAnswerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto);
    return ::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 3,
    kHostMetadataFieldNumber = 4,
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
    kTargetPeerFieldNumber = 5,
    kHostPeerFieldNumber = 6,
  };
  // string payload = 3;
  void clear_payload();
  const std::string& payload() const;
  void set_payload(const std::string& value);
  void set_payload(std::string&& value);
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  std::string* mutable_payload();
  std::string* release_payload();
  void set_allocated_payload(std::string* payload);
  private:
  const std::string& _internal_payload() const;
  void _internal_set_payload(const std::string& value);
  std::string* _internal_mutable_payload();
  public:

  // string host_metadata = 4;
  void clear_host_metadata();
  const std::string& host_metadata() const;
  void set_host_metadata(const std::string& value);
  void set_host_metadata(std::string&& value);
  void set_host_metadata(const char* value);
  void set_host_metadata(const char* value, size_t size);
  std::string* mutable_host_metadata();
  std::string* release_host_metadata();
  void set_allocated_host_metadata(std::string* host_metadata);
  private:
  const std::string& _internal_host_metadata() const;
  void _internal_set_host_metadata(const std::string& value);
  std::string* _internal_mutable_host_metadata();
  public:

  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.io.Address target_peer = 5;
  bool has_target_peer() const;
  private:
  bool _internal_has_target_peer() const;
  public:
  void clear_target_peer();
  const ::syft::core::io::Address& target_peer() const;
  ::syft::core::io::Address* release_target_peer();
  ::syft::core::io::Address* mutable_target_peer();
  void set_allocated_target_peer(::syft::core::io::Address* target_peer);
  private:
  const ::syft::core::io::Address& _internal_target_peer() const;
  ::syft::core::io::Address* _internal_mutable_target_peer();
  public:
  void unsafe_arena_set_allocated_target_peer(
      ::syft::core::io::Address* target_peer);
  ::syft::core::io::Address* unsafe_arena_release_target_peer();

  // .syft.core.io.Address host_peer = 6;
  bool has_host_peer() const;
  private:
  bool _internal_has_host_peer() const;
  public:
  void clear_host_peer();
  const ::syft::core::io::Address& host_peer() const;
  ::syft::core::io::Address* release_host_peer();
  ::syft::core::io::Address* mutable_host_peer();
  void set_allocated_host_peer(::syft::core::io::Address* host_peer);
  private:
  const ::syft::core::io::Address& _internal_host_peer() const;
  ::syft::core::io::Address* _internal_mutable_host_peer();
  public:
  void unsafe_arena_set_allocated_host_peer(
      ::syft::core::io::Address* host_peer);
  ::syft::core::io::Address* unsafe_arena_release_host_peer();

  // @@protoc_insertion_point(class_scope:syft.grid.service.SignalingAnswerMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payload_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_metadata_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  ::syft::core::io::Address* target_peer_;
  ::syft::core::io::Address* host_peer_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SignalingOfferMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.grid.service.SignalingOfferMessage) */ {
 public:
  inline SignalingOfferMessage() : SignalingOfferMessage(nullptr) {}
  virtual ~SignalingOfferMessage();

  SignalingOfferMessage(const SignalingOfferMessage& from);
  SignalingOfferMessage(SignalingOfferMessage&& from) noexcept
    : SignalingOfferMessage() {
    *this = ::std::move(from);
  }

  inline SignalingOfferMessage& operator=(const SignalingOfferMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalingOfferMessage& operator=(SignalingOfferMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalingOfferMessage& default_instance();

  static inline const SignalingOfferMessage* internal_default_instance() {
    return reinterpret_cast<const SignalingOfferMessage*>(
               &_SignalingOfferMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SignalingOfferMessage& a, SignalingOfferMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalingOfferMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignalingOfferMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalingOfferMessage* New() const final {
    return CreateMaybeMessage<SignalingOfferMessage>(nullptr);
  }

  SignalingOfferMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalingOfferMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalingOfferMessage& from);
  void MergeFrom(const SignalingOfferMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalingOfferMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.grid.service.SignalingOfferMessage";
  }
  protected:
  explicit SignalingOfferMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto);
    return ::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 3,
    kHostMetadataFieldNumber = 4,
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
    kTargetPeerFieldNumber = 5,
    kHostPeerFieldNumber = 6,
  };
  // string payload = 3;
  void clear_payload();
  const std::string& payload() const;
  void set_payload(const std::string& value);
  void set_payload(std::string&& value);
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  std::string* mutable_payload();
  std::string* release_payload();
  void set_allocated_payload(std::string* payload);
  private:
  const std::string& _internal_payload() const;
  void _internal_set_payload(const std::string& value);
  std::string* _internal_mutable_payload();
  public:

  // string host_metadata = 4;
  void clear_host_metadata();
  const std::string& host_metadata() const;
  void set_host_metadata(const std::string& value);
  void set_host_metadata(std::string&& value);
  void set_host_metadata(const char* value);
  void set_host_metadata(const char* value, size_t size);
  std::string* mutable_host_metadata();
  std::string* release_host_metadata();
  void set_allocated_host_metadata(std::string* host_metadata);
  private:
  const std::string& _internal_host_metadata() const;
  void _internal_set_host_metadata(const std::string& value);
  std::string* _internal_mutable_host_metadata();
  public:

  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.io.Address target_peer = 5;
  bool has_target_peer() const;
  private:
  bool _internal_has_target_peer() const;
  public:
  void clear_target_peer();
  const ::syft::core::io::Address& target_peer() const;
  ::syft::core::io::Address* release_target_peer();
  ::syft::core::io::Address* mutable_target_peer();
  void set_allocated_target_peer(::syft::core::io::Address* target_peer);
  private:
  const ::syft::core::io::Address& _internal_target_peer() const;
  ::syft::core::io::Address* _internal_mutable_target_peer();
  public:
  void unsafe_arena_set_allocated_target_peer(
      ::syft::core::io::Address* target_peer);
  ::syft::core::io::Address* unsafe_arena_release_target_peer();

  // .syft.core.io.Address host_peer = 6;
  bool has_host_peer() const;
  private:
  bool _internal_has_host_peer() const;
  public:
  void clear_host_peer();
  const ::syft::core::io::Address& host_peer() const;
  ::syft::core::io::Address* release_host_peer();
  ::syft::core::io::Address* mutable_host_peer();
  void set_allocated_host_peer(::syft::core::io::Address* host_peer);
  private:
  const ::syft::core::io::Address& _internal_host_peer() const;
  ::syft::core::io::Address* _internal_mutable_host_peer();
  public:
  void unsafe_arena_set_allocated_host_peer(
      ::syft::core::io::Address* host_peer);
  ::syft::core::io::Address* unsafe_arena_release_host_peer();

  // @@protoc_insertion_point(class_scope:syft.grid.service.SignalingOfferMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payload_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_metadata_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  ::syft::core::io::Address* target_peer_;
  ::syft::core::io::Address* host_peer_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
};
// -------------------------------------------------------------------

class OfferPullRequestMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.grid.service.OfferPullRequestMessage) */ {
 public:
  inline OfferPullRequestMessage() : OfferPullRequestMessage(nullptr) {}
  virtual ~OfferPullRequestMessage();

  OfferPullRequestMessage(const OfferPullRequestMessage& from);
  OfferPullRequestMessage(OfferPullRequestMessage&& from) noexcept
    : OfferPullRequestMessage() {
    *this = ::std::move(from);
  }

  inline OfferPullRequestMessage& operator=(const OfferPullRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline OfferPullRequestMessage& operator=(OfferPullRequestMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OfferPullRequestMessage& default_instance();

  static inline const OfferPullRequestMessage* internal_default_instance() {
    return reinterpret_cast<const OfferPullRequestMessage*>(
               &_OfferPullRequestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OfferPullRequestMessage& a, OfferPullRequestMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(OfferPullRequestMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OfferPullRequestMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OfferPullRequestMessage* New() const final {
    return CreateMaybeMessage<OfferPullRequestMessage>(nullptr);
  }

  OfferPullRequestMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OfferPullRequestMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OfferPullRequestMessage& from);
  void MergeFrom(const OfferPullRequestMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfferPullRequestMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.grid.service.OfferPullRequestMessage";
  }
  protected:
  explicit OfferPullRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto);
    return ::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
    kReplyToFieldNumber = 3,
    kTargetPeerFieldNumber = 4,
    kHostPeerFieldNumber = 5,
  };
  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.io.Address reply_to = 3;
  bool has_reply_to() const;
  private:
  bool _internal_has_reply_to() const;
  public:
  void clear_reply_to();
  const ::syft::core::io::Address& reply_to() const;
  ::syft::core::io::Address* release_reply_to();
  ::syft::core::io::Address* mutable_reply_to();
  void set_allocated_reply_to(::syft::core::io::Address* reply_to);
  private:
  const ::syft::core::io::Address& _internal_reply_to() const;
  ::syft::core::io::Address* _internal_mutable_reply_to();
  public:
  void unsafe_arena_set_allocated_reply_to(
      ::syft::core::io::Address* reply_to);
  ::syft::core::io::Address* unsafe_arena_release_reply_to();

  // .syft.core.io.Address target_peer = 4;
  bool has_target_peer() const;
  private:
  bool _internal_has_target_peer() const;
  public:
  void clear_target_peer();
  const ::syft::core::io::Address& target_peer() const;
  ::syft::core::io::Address* release_target_peer();
  ::syft::core::io::Address* mutable_target_peer();
  void set_allocated_target_peer(::syft::core::io::Address* target_peer);
  private:
  const ::syft::core::io::Address& _internal_target_peer() const;
  ::syft::core::io::Address* _internal_mutable_target_peer();
  public:
  void unsafe_arena_set_allocated_target_peer(
      ::syft::core::io::Address* target_peer);
  ::syft::core::io::Address* unsafe_arena_release_target_peer();

  // .syft.core.io.Address host_peer = 5;
  bool has_host_peer() const;
  private:
  bool _internal_has_host_peer() const;
  public:
  void clear_host_peer();
  const ::syft::core::io::Address& host_peer() const;
  ::syft::core::io::Address* release_host_peer();
  ::syft::core::io::Address* mutable_host_peer();
  void set_allocated_host_peer(::syft::core::io::Address* host_peer);
  private:
  const ::syft::core::io::Address& _internal_host_peer() const;
  ::syft::core::io::Address* _internal_mutable_host_peer();
  public:
  void unsafe_arena_set_allocated_host_peer(
      ::syft::core::io::Address* host_peer);
  ::syft::core::io::Address* unsafe_arena_release_host_peer();

  // @@protoc_insertion_point(class_scope:syft.grid.service.OfferPullRequestMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  ::syft::core::io::Address* reply_to_;
  ::syft::core::io::Address* target_peer_;
  ::syft::core::io::Address* host_peer_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AnswerPullRequestMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.grid.service.AnswerPullRequestMessage) */ {
 public:
  inline AnswerPullRequestMessage() : AnswerPullRequestMessage(nullptr) {}
  virtual ~AnswerPullRequestMessage();

  AnswerPullRequestMessage(const AnswerPullRequestMessage& from);
  AnswerPullRequestMessage(AnswerPullRequestMessage&& from) noexcept
    : AnswerPullRequestMessage() {
    *this = ::std::move(from);
  }

  inline AnswerPullRequestMessage& operator=(const AnswerPullRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnswerPullRequestMessage& operator=(AnswerPullRequestMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnswerPullRequestMessage& default_instance();

  static inline const AnswerPullRequestMessage* internal_default_instance() {
    return reinterpret_cast<const AnswerPullRequestMessage*>(
               &_AnswerPullRequestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AnswerPullRequestMessage& a, AnswerPullRequestMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(AnswerPullRequestMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnswerPullRequestMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnswerPullRequestMessage* New() const final {
    return CreateMaybeMessage<AnswerPullRequestMessage>(nullptr);
  }

  AnswerPullRequestMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnswerPullRequestMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnswerPullRequestMessage& from);
  void MergeFrom(const AnswerPullRequestMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnswerPullRequestMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.grid.service.AnswerPullRequestMessage";
  }
  protected:
  explicit AnswerPullRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto);
    return ::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
    kReplyToFieldNumber = 3,
    kTargetPeerFieldNumber = 4,
    kHostPeerFieldNumber = 5,
  };
  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // .syft.core.io.Address reply_to = 3;
  bool has_reply_to() const;
  private:
  bool _internal_has_reply_to() const;
  public:
  void clear_reply_to();
  const ::syft::core::io::Address& reply_to() const;
  ::syft::core::io::Address* release_reply_to();
  ::syft::core::io::Address* mutable_reply_to();
  void set_allocated_reply_to(::syft::core::io::Address* reply_to);
  private:
  const ::syft::core::io::Address& _internal_reply_to() const;
  ::syft::core::io::Address* _internal_mutable_reply_to();
  public:
  void unsafe_arena_set_allocated_reply_to(
      ::syft::core::io::Address* reply_to);
  ::syft::core::io::Address* unsafe_arena_release_reply_to();

  // .syft.core.io.Address target_peer = 4;
  bool has_target_peer() const;
  private:
  bool _internal_has_target_peer() const;
  public:
  void clear_target_peer();
  const ::syft::core::io::Address& target_peer() const;
  ::syft::core::io::Address* release_target_peer();
  ::syft::core::io::Address* mutable_target_peer();
  void set_allocated_target_peer(::syft::core::io::Address* target_peer);
  private:
  const ::syft::core::io::Address& _internal_target_peer() const;
  ::syft::core::io::Address* _internal_mutable_target_peer();
  public:
  void unsafe_arena_set_allocated_target_peer(
      ::syft::core::io::Address* target_peer);
  ::syft::core::io::Address* unsafe_arena_release_target_peer();

  // .syft.core.io.Address host_peer = 5;
  bool has_host_peer() const;
  private:
  bool _internal_has_host_peer() const;
  public:
  void clear_host_peer();
  const ::syft::core::io::Address& host_peer() const;
  ::syft::core::io::Address* release_host_peer();
  ::syft::core::io::Address* mutable_host_peer();
  void set_allocated_host_peer(::syft::core::io::Address* host_peer);
  private:
  const ::syft::core::io::Address& _internal_host_peer() const;
  ::syft::core::io::Address* _internal_mutable_host_peer();
  public:
  void unsafe_arena_set_allocated_host_peer(
      ::syft::core::io::Address* host_peer);
  ::syft::core::io::Address* unsafe_arena_release_host_peer();

  // @@protoc_insertion_point(class_scope:syft.grid.service.AnswerPullRequestMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  ::syft::core::io::Address* reply_to_;
  ::syft::core::io::Address* target_peer_;
  ::syft::core::io::Address* host_peer_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SignalingRequestsNotFound PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:syft.grid.service.SignalingRequestsNotFound) */ {
 public:
  inline SignalingRequestsNotFound() : SignalingRequestsNotFound(nullptr) {}
  virtual ~SignalingRequestsNotFound();

  SignalingRequestsNotFound(const SignalingRequestsNotFound& from);
  SignalingRequestsNotFound(SignalingRequestsNotFound&& from) noexcept
    : SignalingRequestsNotFound() {
    *this = ::std::move(from);
  }

  inline SignalingRequestsNotFound& operator=(const SignalingRequestsNotFound& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalingRequestsNotFound& operator=(SignalingRequestsNotFound&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SignalingRequestsNotFound& default_instance();

  static inline const SignalingRequestsNotFound* internal_default_instance() {
    return reinterpret_cast<const SignalingRequestsNotFound*>(
               &_SignalingRequestsNotFound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SignalingRequestsNotFound& a, SignalingRequestsNotFound& b) {
    a.Swap(&b);
  }
  inline void Swap(SignalingRequestsNotFound* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignalingRequestsNotFound* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SignalingRequestsNotFound* New() const final {
    return CreateMaybeMessage<SignalingRequestsNotFound>(nullptr);
  }

  SignalingRequestsNotFound* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SignalingRequestsNotFound>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SignalingRequestsNotFound& from);
  void MergeFrom(const SignalingRequestsNotFound& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalingRequestsNotFound* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "syft.grid.service.SignalingRequestsNotFound";
  }
  protected:
  explicit SignalingRequestsNotFound(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto);
    return ::descriptor_table_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgIdFieldNumber = 1,
    kAddressFieldNumber = 2,
  };
  // .syft.core.common.UID msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  const ::syft::core::common::UID& msg_id() const;
  ::syft::core::common::UID* release_msg_id();
  ::syft::core::common::UID* mutable_msg_id();
  void set_allocated_msg_id(::syft::core::common::UID* msg_id);
  private:
  const ::syft::core::common::UID& _internal_msg_id() const;
  ::syft::core::common::UID* _internal_mutable_msg_id();
  public:
  void unsafe_arena_set_allocated_msg_id(
      ::syft::core::common::UID* msg_id);
  ::syft::core::common::UID* unsafe_arena_release_msg_id();

  // .syft.core.io.Address address = 2;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const ::syft::core::io::Address& address() const;
  ::syft::core::io::Address* release_address();
  ::syft::core::io::Address* mutable_address();
  void set_allocated_address(::syft::core::io::Address* address);
  private:
  const ::syft::core::io::Address& _internal_address() const;
  ::syft::core::io::Address* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      ::syft::core::io::Address* address);
  ::syft::core::io::Address* unsafe_arena_release_address();

  // @@protoc_insertion_point(class_scope:syft.grid.service.SignalingRequestsNotFound)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::syft::core::common::UID* msg_id_;
  ::syft::core::io::Address* address_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SignalingAnswerMessage

// .syft.core.common.UID msg_id = 1;
inline bool SignalingAnswerMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool SignalingAnswerMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& SignalingAnswerMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& SignalingAnswerMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.msg_id)
  return _internal_msg_id();
}
inline void SignalingAnswerMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingAnswerMessage.msg_id)
}
inline ::syft::core::common::UID* SignalingAnswerMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* SignalingAnswerMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* SignalingAnswerMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* SignalingAnswerMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void SignalingAnswerMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool SignalingAnswerMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool SignalingAnswerMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.address)
  return _internal_address();
}
inline void SignalingAnswerMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingAnswerMessage.address)
}
inline ::syft::core::io::Address* SignalingAnswerMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.address)
  return _internal_mutable_address();
}
inline void SignalingAnswerMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.address)
}

// string payload = 3;
inline void SignalingAnswerMessage::clear_payload() {
  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SignalingAnswerMessage::payload() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.payload)
  return _internal_payload();
}
inline void SignalingAnswerMessage::set_payload(const std::string& value) {
  _internal_set_payload(value);
  // @@protoc_insertion_point(field_set:syft.grid.service.SignalingAnswerMessage.payload)
}
inline std::string* SignalingAnswerMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.payload)
  return _internal_mutable_payload();
}
inline const std::string& SignalingAnswerMessage::_internal_payload() const {
  return payload_.Get();
}
inline void SignalingAnswerMessage::_internal_set_payload(const std::string& value) {
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SignalingAnswerMessage::set_payload(std::string&& value) {
  
  payload_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:syft.grid.service.SignalingAnswerMessage.payload)
}
inline void SignalingAnswerMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:syft.grid.service.SignalingAnswerMessage.payload)
}
inline void SignalingAnswerMessage::set_payload(const char* value,
    size_t size) {
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:syft.grid.service.SignalingAnswerMessage.payload)
}
inline std::string* SignalingAnswerMessage::_internal_mutable_payload() {
  
  return payload_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SignalingAnswerMessage::release_payload() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.payload)
  return payload_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SignalingAnswerMessage::set_allocated_payload(std::string* payload) {
  if (payload != nullptr) {
    
  } else {
    
  }
  payload_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payload,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.payload)
}

// string host_metadata = 4;
inline void SignalingAnswerMessage::clear_host_metadata() {
  host_metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SignalingAnswerMessage::host_metadata() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.host_metadata)
  return _internal_host_metadata();
}
inline void SignalingAnswerMessage::set_host_metadata(const std::string& value) {
  _internal_set_host_metadata(value);
  // @@protoc_insertion_point(field_set:syft.grid.service.SignalingAnswerMessage.host_metadata)
}
inline std::string* SignalingAnswerMessage::mutable_host_metadata() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.host_metadata)
  return _internal_mutable_host_metadata();
}
inline const std::string& SignalingAnswerMessage::_internal_host_metadata() const {
  return host_metadata_.Get();
}
inline void SignalingAnswerMessage::_internal_set_host_metadata(const std::string& value) {
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SignalingAnswerMessage::set_host_metadata(std::string&& value) {
  
  host_metadata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:syft.grid.service.SignalingAnswerMessage.host_metadata)
}
inline void SignalingAnswerMessage::set_host_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:syft.grid.service.SignalingAnswerMessage.host_metadata)
}
inline void SignalingAnswerMessage::set_host_metadata(const char* value,
    size_t size) {
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:syft.grid.service.SignalingAnswerMessage.host_metadata)
}
inline std::string* SignalingAnswerMessage::_internal_mutable_host_metadata() {
  
  return host_metadata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SignalingAnswerMessage::release_host_metadata() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.host_metadata)
  return host_metadata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SignalingAnswerMessage::set_allocated_host_metadata(std::string* host_metadata) {
  if (host_metadata != nullptr) {
    
  } else {
    
  }
  host_metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host_metadata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.host_metadata)
}

// .syft.core.io.Address target_peer = 5;
inline bool SignalingAnswerMessage::_internal_has_target_peer() const {
  return this != internal_default_instance() && target_peer_ != nullptr;
}
inline bool SignalingAnswerMessage::has_target_peer() const {
  return _internal_has_target_peer();
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::_internal_target_peer() const {
  const ::syft::core::io::Address* p = target_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::target_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.target_peer)
  return _internal_target_peer();
}
inline void SignalingAnswerMessage::unsafe_arena_set_allocated_target_peer(
    ::syft::core::io::Address* target_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  target_peer_ = target_peer;
  if (target_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingAnswerMessage.target_peer)
}
inline ::syft::core::io::Address* SignalingAnswerMessage::release_target_peer() {
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::unsafe_arena_release_target_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.target_peer)
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::_internal_mutable_target_peer() {
  
  if (target_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    target_peer_ = p;
  }
  return target_peer_;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::mutable_target_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.target_peer)
  return _internal_mutable_target_peer();
}
inline void SignalingAnswerMessage::set_allocated_target_peer(::syft::core::io::Address* target_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  if (target_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer)->GetArena();
    if (message_arena != submessage_arena) {
      target_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_peer, submessage_arena);
    }
    
  } else {
    
  }
  target_peer_ = target_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.target_peer)
}

// .syft.core.io.Address host_peer = 6;
inline bool SignalingAnswerMessage::_internal_has_host_peer() const {
  return this != internal_default_instance() && host_peer_ != nullptr;
}
inline bool SignalingAnswerMessage::has_host_peer() const {
  return _internal_has_host_peer();
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::_internal_host_peer() const {
  const ::syft::core::io::Address* p = host_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingAnswerMessage::host_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingAnswerMessage.host_peer)
  return _internal_host_peer();
}
inline void SignalingAnswerMessage::unsafe_arena_set_allocated_host_peer(
    ::syft::core::io::Address* host_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  host_peer_ = host_peer;
  if (host_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingAnswerMessage.host_peer)
}
inline ::syft::core::io::Address* SignalingAnswerMessage::release_host_peer() {
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::unsafe_arena_release_host_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingAnswerMessage.host_peer)
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::_internal_mutable_host_peer() {
  
  if (host_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    host_peer_ = p;
  }
  return host_peer_;
}
inline ::syft::core::io::Address* SignalingAnswerMessage::mutable_host_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingAnswerMessage.host_peer)
  return _internal_mutable_host_peer();
}
inline void SignalingAnswerMessage::set_allocated_host_peer(::syft::core::io::Address* host_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  if (host_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer)->GetArena();
    if (message_arena != submessage_arena) {
      host_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_peer, submessage_arena);
    }
    
  } else {
    
  }
  host_peer_ = host_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingAnswerMessage.host_peer)
}

// -------------------------------------------------------------------

// SignalingOfferMessage

// .syft.core.common.UID msg_id = 1;
inline bool SignalingOfferMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool SignalingOfferMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& SignalingOfferMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& SignalingOfferMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.msg_id)
  return _internal_msg_id();
}
inline void SignalingOfferMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingOfferMessage.msg_id)
}
inline ::syft::core::common::UID* SignalingOfferMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* SignalingOfferMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* SignalingOfferMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* SignalingOfferMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void SignalingOfferMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool SignalingOfferMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool SignalingOfferMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& SignalingOfferMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingOfferMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.address)
  return _internal_address();
}
inline void SignalingOfferMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingOfferMessage.address)
}
inline ::syft::core::io::Address* SignalingOfferMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* SignalingOfferMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.address)
  return _internal_mutable_address();
}
inline void SignalingOfferMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.address)
}

// string payload = 3;
inline void SignalingOfferMessage::clear_payload() {
  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SignalingOfferMessage::payload() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.payload)
  return _internal_payload();
}
inline void SignalingOfferMessage::set_payload(const std::string& value) {
  _internal_set_payload(value);
  // @@protoc_insertion_point(field_set:syft.grid.service.SignalingOfferMessage.payload)
}
inline std::string* SignalingOfferMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.payload)
  return _internal_mutable_payload();
}
inline const std::string& SignalingOfferMessage::_internal_payload() const {
  return payload_.Get();
}
inline void SignalingOfferMessage::_internal_set_payload(const std::string& value) {
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SignalingOfferMessage::set_payload(std::string&& value) {
  
  payload_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:syft.grid.service.SignalingOfferMessage.payload)
}
inline void SignalingOfferMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:syft.grid.service.SignalingOfferMessage.payload)
}
inline void SignalingOfferMessage::set_payload(const char* value,
    size_t size) {
  
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:syft.grid.service.SignalingOfferMessage.payload)
}
inline std::string* SignalingOfferMessage::_internal_mutable_payload() {
  
  return payload_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SignalingOfferMessage::release_payload() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.payload)
  return payload_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SignalingOfferMessage::set_allocated_payload(std::string* payload) {
  if (payload != nullptr) {
    
  } else {
    
  }
  payload_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payload,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.payload)
}

// string host_metadata = 4;
inline void SignalingOfferMessage::clear_host_metadata() {
  host_metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& SignalingOfferMessage::host_metadata() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.host_metadata)
  return _internal_host_metadata();
}
inline void SignalingOfferMessage::set_host_metadata(const std::string& value) {
  _internal_set_host_metadata(value);
  // @@protoc_insertion_point(field_set:syft.grid.service.SignalingOfferMessage.host_metadata)
}
inline std::string* SignalingOfferMessage::mutable_host_metadata() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.host_metadata)
  return _internal_mutable_host_metadata();
}
inline const std::string& SignalingOfferMessage::_internal_host_metadata() const {
  return host_metadata_.Get();
}
inline void SignalingOfferMessage::_internal_set_host_metadata(const std::string& value) {
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void SignalingOfferMessage::set_host_metadata(std::string&& value) {
  
  host_metadata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:syft.grid.service.SignalingOfferMessage.host_metadata)
}
inline void SignalingOfferMessage::set_host_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:syft.grid.service.SignalingOfferMessage.host_metadata)
}
inline void SignalingOfferMessage::set_host_metadata(const char* value,
    size_t size) {
  
  host_metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:syft.grid.service.SignalingOfferMessage.host_metadata)
}
inline std::string* SignalingOfferMessage::_internal_mutable_host_metadata() {
  
  return host_metadata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* SignalingOfferMessage::release_host_metadata() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.host_metadata)
  return host_metadata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SignalingOfferMessage::set_allocated_host_metadata(std::string* host_metadata) {
  if (host_metadata != nullptr) {
    
  } else {
    
  }
  host_metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host_metadata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.host_metadata)
}

// .syft.core.io.Address target_peer = 5;
inline bool SignalingOfferMessage::_internal_has_target_peer() const {
  return this != internal_default_instance() && target_peer_ != nullptr;
}
inline bool SignalingOfferMessage::has_target_peer() const {
  return _internal_has_target_peer();
}
inline const ::syft::core::io::Address& SignalingOfferMessage::_internal_target_peer() const {
  const ::syft::core::io::Address* p = target_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingOfferMessage::target_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.target_peer)
  return _internal_target_peer();
}
inline void SignalingOfferMessage::unsafe_arena_set_allocated_target_peer(
    ::syft::core::io::Address* target_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  target_peer_ = target_peer;
  if (target_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingOfferMessage.target_peer)
}
inline ::syft::core::io::Address* SignalingOfferMessage::release_target_peer() {
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::unsafe_arena_release_target_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.target_peer)
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::_internal_mutable_target_peer() {
  
  if (target_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    target_peer_ = p;
  }
  return target_peer_;
}
inline ::syft::core::io::Address* SignalingOfferMessage::mutable_target_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.target_peer)
  return _internal_mutable_target_peer();
}
inline void SignalingOfferMessage::set_allocated_target_peer(::syft::core::io::Address* target_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  if (target_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer)->GetArena();
    if (message_arena != submessage_arena) {
      target_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_peer, submessage_arena);
    }
    
  } else {
    
  }
  target_peer_ = target_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.target_peer)
}

// .syft.core.io.Address host_peer = 6;
inline bool SignalingOfferMessage::_internal_has_host_peer() const {
  return this != internal_default_instance() && host_peer_ != nullptr;
}
inline bool SignalingOfferMessage::has_host_peer() const {
  return _internal_has_host_peer();
}
inline const ::syft::core::io::Address& SignalingOfferMessage::_internal_host_peer() const {
  const ::syft::core::io::Address* p = host_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingOfferMessage::host_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingOfferMessage.host_peer)
  return _internal_host_peer();
}
inline void SignalingOfferMessage::unsafe_arena_set_allocated_host_peer(
    ::syft::core::io::Address* host_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  host_peer_ = host_peer;
  if (host_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingOfferMessage.host_peer)
}
inline ::syft::core::io::Address* SignalingOfferMessage::release_host_peer() {
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::unsafe_arena_release_host_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingOfferMessage.host_peer)
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingOfferMessage::_internal_mutable_host_peer() {
  
  if (host_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    host_peer_ = p;
  }
  return host_peer_;
}
inline ::syft::core::io::Address* SignalingOfferMessage::mutable_host_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingOfferMessage.host_peer)
  return _internal_mutable_host_peer();
}
inline void SignalingOfferMessage::set_allocated_host_peer(::syft::core::io::Address* host_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  if (host_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer)->GetArena();
    if (message_arena != submessage_arena) {
      host_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_peer, submessage_arena);
    }
    
  } else {
    
  }
  host_peer_ = host_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingOfferMessage.host_peer)
}

// -------------------------------------------------------------------

// OfferPullRequestMessage

// .syft.core.common.UID msg_id = 1;
inline bool OfferPullRequestMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool OfferPullRequestMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& OfferPullRequestMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& OfferPullRequestMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.OfferPullRequestMessage.msg_id)
  return _internal_msg_id();
}
inline void OfferPullRequestMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.OfferPullRequestMessage.msg_id)
}
inline ::syft::core::common::UID* OfferPullRequestMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* OfferPullRequestMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.grid.service.OfferPullRequestMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* OfferPullRequestMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* OfferPullRequestMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.OfferPullRequestMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void OfferPullRequestMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.OfferPullRequestMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool OfferPullRequestMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool OfferPullRequestMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.OfferPullRequestMessage.address)
  return _internal_address();
}
inline void OfferPullRequestMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.OfferPullRequestMessage.address)
}
inline ::syft::core::io::Address* OfferPullRequestMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.grid.service.OfferPullRequestMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.OfferPullRequestMessage.address)
  return _internal_mutable_address();
}
inline void OfferPullRequestMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.OfferPullRequestMessage.address)
}

// .syft.core.io.Address reply_to = 3;
inline bool OfferPullRequestMessage::_internal_has_reply_to() const {
  return this != internal_default_instance() && reply_to_ != nullptr;
}
inline bool OfferPullRequestMessage::has_reply_to() const {
  return _internal_has_reply_to();
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::_internal_reply_to() const {
  const ::syft::core::io::Address* p = reply_to_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::reply_to() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.OfferPullRequestMessage.reply_to)
  return _internal_reply_to();
}
inline void OfferPullRequestMessage::unsafe_arena_set_allocated_reply_to(
    ::syft::core::io::Address* reply_to) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  reply_to_ = reply_to;
  if (reply_to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.OfferPullRequestMessage.reply_to)
}
inline ::syft::core::io::Address* OfferPullRequestMessage::release_reply_to() {
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::unsafe_arena_release_reply_to() {
  // @@protoc_insertion_point(field_release:syft.grid.service.OfferPullRequestMessage.reply_to)
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::_internal_mutable_reply_to() {
  
  if (reply_to_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    reply_to_ = p;
  }
  return reply_to_;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::mutable_reply_to() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.OfferPullRequestMessage.reply_to)
  return _internal_mutable_reply_to();
}
inline void OfferPullRequestMessage::set_allocated_reply_to(::syft::core::io::Address* reply_to) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  if (reply_to) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to)->GetArena();
    if (message_arena != submessage_arena) {
      reply_to = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_to, submessage_arena);
    }
    
  } else {
    
  }
  reply_to_ = reply_to;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.OfferPullRequestMessage.reply_to)
}

// .syft.core.io.Address target_peer = 4;
inline bool OfferPullRequestMessage::_internal_has_target_peer() const {
  return this != internal_default_instance() && target_peer_ != nullptr;
}
inline bool OfferPullRequestMessage::has_target_peer() const {
  return _internal_has_target_peer();
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::_internal_target_peer() const {
  const ::syft::core::io::Address* p = target_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::target_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.OfferPullRequestMessage.target_peer)
  return _internal_target_peer();
}
inline void OfferPullRequestMessage::unsafe_arena_set_allocated_target_peer(
    ::syft::core::io::Address* target_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  target_peer_ = target_peer;
  if (target_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.OfferPullRequestMessage.target_peer)
}
inline ::syft::core::io::Address* OfferPullRequestMessage::release_target_peer() {
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::unsafe_arena_release_target_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.OfferPullRequestMessage.target_peer)
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::_internal_mutable_target_peer() {
  
  if (target_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    target_peer_ = p;
  }
  return target_peer_;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::mutable_target_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.OfferPullRequestMessage.target_peer)
  return _internal_mutable_target_peer();
}
inline void OfferPullRequestMessage::set_allocated_target_peer(::syft::core::io::Address* target_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  if (target_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer)->GetArena();
    if (message_arena != submessage_arena) {
      target_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_peer, submessage_arena);
    }
    
  } else {
    
  }
  target_peer_ = target_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.OfferPullRequestMessage.target_peer)
}

// .syft.core.io.Address host_peer = 5;
inline bool OfferPullRequestMessage::_internal_has_host_peer() const {
  return this != internal_default_instance() && host_peer_ != nullptr;
}
inline bool OfferPullRequestMessage::has_host_peer() const {
  return _internal_has_host_peer();
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::_internal_host_peer() const {
  const ::syft::core::io::Address* p = host_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& OfferPullRequestMessage::host_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.OfferPullRequestMessage.host_peer)
  return _internal_host_peer();
}
inline void OfferPullRequestMessage::unsafe_arena_set_allocated_host_peer(
    ::syft::core::io::Address* host_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  host_peer_ = host_peer;
  if (host_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.OfferPullRequestMessage.host_peer)
}
inline ::syft::core::io::Address* OfferPullRequestMessage::release_host_peer() {
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::unsafe_arena_release_host_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.OfferPullRequestMessage.host_peer)
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::_internal_mutable_host_peer() {
  
  if (host_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    host_peer_ = p;
  }
  return host_peer_;
}
inline ::syft::core::io::Address* OfferPullRequestMessage::mutable_host_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.OfferPullRequestMessage.host_peer)
  return _internal_mutable_host_peer();
}
inline void OfferPullRequestMessage::set_allocated_host_peer(::syft::core::io::Address* host_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  if (host_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer)->GetArena();
    if (message_arena != submessage_arena) {
      host_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_peer, submessage_arena);
    }
    
  } else {
    
  }
  host_peer_ = host_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.OfferPullRequestMessage.host_peer)
}

// -------------------------------------------------------------------

// AnswerPullRequestMessage

// .syft.core.common.UID msg_id = 1;
inline bool AnswerPullRequestMessage::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool AnswerPullRequestMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& AnswerPullRequestMessage::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& AnswerPullRequestMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.AnswerPullRequestMessage.msg_id)
  return _internal_msg_id();
}
inline void AnswerPullRequestMessage::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.AnswerPullRequestMessage.msg_id)
}
inline ::syft::core::common::UID* AnswerPullRequestMessage::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* AnswerPullRequestMessage::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.grid.service.AnswerPullRequestMessage.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* AnswerPullRequestMessage::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* AnswerPullRequestMessage::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.AnswerPullRequestMessage.msg_id)
  return _internal_mutable_msg_id();
}
inline void AnswerPullRequestMessage::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.AnswerPullRequestMessage.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool AnswerPullRequestMessage::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool AnswerPullRequestMessage::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::address() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.AnswerPullRequestMessage.address)
  return _internal_address();
}
inline void AnswerPullRequestMessage::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.AnswerPullRequestMessage.address)
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.grid.service.AnswerPullRequestMessage.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.AnswerPullRequestMessage.address)
  return _internal_mutable_address();
}
inline void AnswerPullRequestMessage::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.AnswerPullRequestMessage.address)
}

// .syft.core.io.Address reply_to = 3;
inline bool AnswerPullRequestMessage::_internal_has_reply_to() const {
  return this != internal_default_instance() && reply_to_ != nullptr;
}
inline bool AnswerPullRequestMessage::has_reply_to() const {
  return _internal_has_reply_to();
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::_internal_reply_to() const {
  const ::syft::core::io::Address* p = reply_to_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::reply_to() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.AnswerPullRequestMessage.reply_to)
  return _internal_reply_to();
}
inline void AnswerPullRequestMessage::unsafe_arena_set_allocated_reply_to(
    ::syft::core::io::Address* reply_to) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  reply_to_ = reply_to;
  if (reply_to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.AnswerPullRequestMessage.reply_to)
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::release_reply_to() {
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::unsafe_arena_release_reply_to() {
  // @@protoc_insertion_point(field_release:syft.grid.service.AnswerPullRequestMessage.reply_to)
  
  ::syft::core::io::Address* temp = reply_to_;
  reply_to_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::_internal_mutable_reply_to() {
  
  if (reply_to_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    reply_to_ = p;
  }
  return reply_to_;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::mutable_reply_to() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.AnswerPullRequestMessage.reply_to)
  return _internal_mutable_reply_to();
}
inline void AnswerPullRequestMessage::set_allocated_reply_to(::syft::core::io::Address* reply_to) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to_);
  }
  if (reply_to) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_to)->GetArena();
    if (message_arena != submessage_arena) {
      reply_to = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_to, submessage_arena);
    }
    
  } else {
    
  }
  reply_to_ = reply_to;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.AnswerPullRequestMessage.reply_to)
}

// .syft.core.io.Address target_peer = 4;
inline bool AnswerPullRequestMessage::_internal_has_target_peer() const {
  return this != internal_default_instance() && target_peer_ != nullptr;
}
inline bool AnswerPullRequestMessage::has_target_peer() const {
  return _internal_has_target_peer();
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::_internal_target_peer() const {
  const ::syft::core::io::Address* p = target_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::target_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.AnswerPullRequestMessage.target_peer)
  return _internal_target_peer();
}
inline void AnswerPullRequestMessage::unsafe_arena_set_allocated_target_peer(
    ::syft::core::io::Address* target_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  target_peer_ = target_peer;
  if (target_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.AnswerPullRequestMessage.target_peer)
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::release_target_peer() {
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::unsafe_arena_release_target_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.AnswerPullRequestMessage.target_peer)
  
  ::syft::core::io::Address* temp = target_peer_;
  target_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::_internal_mutable_target_peer() {
  
  if (target_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    target_peer_ = p;
  }
  return target_peer_;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::mutable_target_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.AnswerPullRequestMessage.target_peer)
  return _internal_mutable_target_peer();
}
inline void AnswerPullRequestMessage::set_allocated_target_peer(::syft::core::io::Address* target_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer_);
  }
  if (target_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_peer)->GetArena();
    if (message_arena != submessage_arena) {
      target_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_peer, submessage_arena);
    }
    
  } else {
    
  }
  target_peer_ = target_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.AnswerPullRequestMessage.target_peer)
}

// .syft.core.io.Address host_peer = 5;
inline bool AnswerPullRequestMessage::_internal_has_host_peer() const {
  return this != internal_default_instance() && host_peer_ != nullptr;
}
inline bool AnswerPullRequestMessage::has_host_peer() const {
  return _internal_has_host_peer();
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::_internal_host_peer() const {
  const ::syft::core::io::Address* p = host_peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& AnswerPullRequestMessage::host_peer() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.AnswerPullRequestMessage.host_peer)
  return _internal_host_peer();
}
inline void AnswerPullRequestMessage::unsafe_arena_set_allocated_host_peer(
    ::syft::core::io::Address* host_peer) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  host_peer_ = host_peer;
  if (host_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.AnswerPullRequestMessage.host_peer)
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::release_host_peer() {
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::unsafe_arena_release_host_peer() {
  // @@protoc_insertion_point(field_release:syft.grid.service.AnswerPullRequestMessage.host_peer)
  
  ::syft::core::io::Address* temp = host_peer_;
  host_peer_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::_internal_mutable_host_peer() {
  
  if (host_peer_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    host_peer_ = p;
  }
  return host_peer_;
}
inline ::syft::core::io::Address* AnswerPullRequestMessage::mutable_host_peer() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.AnswerPullRequestMessage.host_peer)
  return _internal_mutable_host_peer();
}
inline void AnswerPullRequestMessage::set_allocated_host_peer(::syft::core::io::Address* host_peer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer_);
  }
  if (host_peer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_peer)->GetArena();
    if (message_arena != submessage_arena) {
      host_peer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_peer, submessage_arena);
    }
    
  } else {
    
  }
  host_peer_ = host_peer;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.AnswerPullRequestMessage.host_peer)
}

// -------------------------------------------------------------------

// SignalingRequestsNotFound

// .syft.core.common.UID msg_id = 1;
inline bool SignalingRequestsNotFound::_internal_has_msg_id() const {
  return this != internal_default_instance() && msg_id_ != nullptr;
}
inline bool SignalingRequestsNotFound::has_msg_id() const {
  return _internal_has_msg_id();
}
inline const ::syft::core::common::UID& SignalingRequestsNotFound::_internal_msg_id() const {
  const ::syft::core::common::UID* p = msg_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::common::UID&>(
      ::syft::core::common::_UID_default_instance_);
}
inline const ::syft::core::common::UID& SignalingRequestsNotFound::msg_id() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingRequestsNotFound.msg_id)
  return _internal_msg_id();
}
inline void SignalingRequestsNotFound::unsafe_arena_set_allocated_msg_id(
    ::syft::core::common::UID* msg_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  msg_id_ = msg_id;
  if (msg_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingRequestsNotFound.msg_id)
}
inline ::syft::core::common::UID* SignalingRequestsNotFound::release_msg_id() {
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::common::UID* SignalingRequestsNotFound::unsafe_arena_release_msg_id() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingRequestsNotFound.msg_id)
  
  ::syft::core::common::UID* temp = msg_id_;
  msg_id_ = nullptr;
  return temp;
}
inline ::syft::core::common::UID* SignalingRequestsNotFound::_internal_mutable_msg_id() {
  
  if (msg_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::common::UID>(GetArena());
    msg_id_ = p;
  }
  return msg_id_;
}
inline ::syft::core::common::UID* SignalingRequestsNotFound::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingRequestsNotFound.msg_id)
  return _internal_mutable_msg_id();
}
inline void SignalingRequestsNotFound::set_allocated_msg_id(::syft::core::common::UID* msg_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id_);
  }
  if (msg_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(msg_id)->GetArena();
    if (message_arena != submessage_arena) {
      msg_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg_id, submessage_arena);
    }
    
  } else {
    
  }
  msg_id_ = msg_id;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingRequestsNotFound.msg_id)
}

// .syft.core.io.Address address = 2;
inline bool SignalingRequestsNotFound::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool SignalingRequestsNotFound::has_address() const {
  return _internal_has_address();
}
inline const ::syft::core::io::Address& SignalingRequestsNotFound::_internal_address() const {
  const ::syft::core::io::Address* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const ::syft::core::io::Address&>(
      ::syft::core::io::_Address_default_instance_);
}
inline const ::syft::core::io::Address& SignalingRequestsNotFound::address() const {
  // @@protoc_insertion_point(field_get:syft.grid.service.SignalingRequestsNotFound.address)
  return _internal_address();
}
inline void SignalingRequestsNotFound::unsafe_arena_set_allocated_address(
    ::syft::core::io::Address* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:syft.grid.service.SignalingRequestsNotFound.address)
}
inline ::syft::core::io::Address* SignalingRequestsNotFound::release_address() {
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::syft::core::io::Address* SignalingRequestsNotFound::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:syft.grid.service.SignalingRequestsNotFound.address)
  
  ::syft::core::io::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::syft::core::io::Address* SignalingRequestsNotFound::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::syft::core::io::Address>(GetArena());
    address_ = p;
  }
  return address_;
}
inline ::syft::core::io::Address* SignalingRequestsNotFound::mutable_address() {
  // @@protoc_insertion_point(field_mutable:syft.grid.service.SignalingRequestsNotFound.address)
  return _internal_mutable_address();
}
inline void SignalingRequestsNotFound::set_allocated_address(::syft::core::io::Address* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:syft.grid.service.SignalingRequestsNotFound.address)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace grid
}  // namespace syft

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fgrid_2fservice_2fsignaling_5fservice_2eproto
